<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gaussli&#39;s Blog</title>
  
  <subtitle>Learn More Everyday</subtitle>
  <link href="http://gaussli.com/atom.xml" rel="self"/>
  
  <link href="http://gaussli.com/"/>
  <updated>2022-01-15T13:55:23.094Z</updated>
  <id>http://gaussli.com/</id>
  
  <author>
    <name>gaussli</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【容器化】Kubernetes二进制高可用部署2-CA证书</title>
    <link href="http://gaussli.com/2022/01/15/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B22-ca%E8%AF%81%E4%B9%A6/"/>
    <id>http://gaussli.com/2022/01/15/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B22-ca%E8%AF%81%E4%B9%A6/</id>
    <published>2022-01-15T13:55:23.000Z</published>
    <updated>2022-01-15T13:55:23.094Z</updated>
    
    <content type="html"><![CDATA[<p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;(•̀ᴗ•́)و ̑̑&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【容器化】Kubernetes二进制高可用部署1-准备</title>
    <link href="http://gaussli.com/2021/09/12/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B21-%E5%87%86%E5%A4%87/"/>
    <id>http://gaussli.com/2021/09/12/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B21-%E5%87%86%E5%A4%87/</id>
    <published>2021-09-12T09:14:59.000Z</published>
    <updated>2022-01-15T14:07:21.094Z</updated>
    
    <content type="html"><![CDATA[<h1 id="零、目录"><a href="#零、目录" class="headerlink" title="零、目录"></a>零、目录</h1><ul><li><a href="/2021/09/12/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B21-%E5%87%86%E5%A4%87/" title="【容器化】Kubernetes二进制高可用部署1-准备">【容器化】Kubernetes二进制高可用部署1-准备</a></li><li><a href="/2022/01/15/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B22-ca%E8%AF%81%E4%B9%A6/" title="【容器化】Kubernetes二进制高可用部署2-CA证书">【容器化】Kubernetes二进制高可用部署2-CA证书</a></li></ul><h1 id="零、环境说明及前期准备"><a href="#零、环境说明及前期准备" class="headerlink" title="零、环境说明及前期准备"></a>零、环境说明及前期准备</h1><h2 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h2><ul><li>SYSTEM OS：CentOS7.9.2009</li><li>KERNEL：3.10.0-1160</li><li>CPU：1C</li><li>MEMORY：2G</li><li>DISK：12G</li></ul><h2 id="虚拟机信息"><a href="#虚拟机信息" class="headerlink" title="虚拟机信息"></a>虚拟机信息</h2><table><thead><tr><th>主机名</th><th>IP</th></tr></thead><tbody><tr><td>centos1</td><td>192.168.56.101</td></tr><tr><td>centos2</td><td>192.168.56.102</td></tr><tr><td>centos3</td><td>192.168.56.103</td></tr></tbody></table><h2 id="Master高可用节点的VIP"><a href="#Master高可用节点的VIP" class="headerlink" title="Master高可用节点的VIP"></a>Master高可用节点的VIP</h2><p>需要保证该IP没有被网络内其他主机使用</p><ul><li>192.168.56.250</li></ul><h2 id="Kube-apiserver的cidr"><a href="#Kube-apiserver的cidr" class="headerlink" title="Kube-apiserver的cidr"></a>Kube-apiserver的cidr</h2><p>需要保证该网段不和主机网络重复</p><ul><li>169.169.0.0/16</li></ul><h2 id="服务部署版本"><a href="#服务部署版本" class="headerlink" title="服务部署版本"></a>服务部署版本</h2><table><thead><tr><th>服务名</th><th>版本</th></tr></thead><tbody><tr><td>docker</td><td>19.03.15</td></tr><tr><td>etcd</td><td>v3.4.13</td></tr><tr><td>kubernetes</td><td>v1.19.0</td></tr></tbody></table><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="所有主机禁用swap虚拟内存"><a href="#所有主机禁用swap虚拟内存" class="headerlink" title="所有主机禁用swap虚拟内存"></a>所有主机禁用swap虚拟内存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看默认是否开启swap虚拟内存，swap端不为0则说明开启</span></span><br><span class="line">free -h</span><br><span class="line"><span class="comment"># 临时禁用swap</span></span><br><span class="line">swapoff -a</span><br><span class="line"><span class="comment"># 永久禁用swap，需重启服务生效</span></span><br><span class="line">sed -i <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br><span class="line"><span class="comment"># 再次查看swap是否已关闭</span></span><br><span class="line">free -h</span><br></pre></td></tr></table></figure><h3 id="所有主机禁用SELinux"><a href="#所有主机禁用SELinux" class="headerlink" title="所有主机禁用SELinux"></a>所有主机禁用SELinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看默认是否已关闭</span></span><br><span class="line">getenforce</span><br><span class="line"><span class="comment"># 临时禁用</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment"># 永久禁用，需重启服务器生效</span></span><br><span class="line">sed -i <span class="string">&quot;s/^SELINUX=.*/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span><br><span class="line"><span class="comment"># 再次查看是否已关闭</span></span><br><span class="line">getenforce</span><br></pre></td></tr></table></figure><h3 id="所有主机关闭防火墙"><a href="#所有主机关闭防火墙" class="headerlink" title="所有主机关闭防火墙"></a>所有主机关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有主机执行</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><h3 id="创建kubernetes日志目录"><a href="#创建kubernetes日志目录" class="headerlink" title="创建kubernetes日志目录"></a>创建kubernetes日志目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有主机执行</span></span><br><span class="line">mkdir /var/<span class="built_in">log</span>/kubernetes</span><br></pre></td></tr></table></figure><h3 id="安装必要的工具"><a href="#安装必要的工具" class="headerlink" title="安装必要的工具"></a>安装必要的工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装net-tools工具</span><br><span class="line">yum install -y net-tools</span><br></pre></td></tr></table></figure><h1 id="一、创建根证书"><a href="#一、创建根证书" class="headerlink" title="一、创建根证书"></a>一、创建根证书</h1><h2 id="centos1主机创建根证书"><a href="#centos1主机创建根证书" class="headerlink" title="centos1主机创建根证书"></a>centos1主机创建根证书</h2><h3 id="创建根证书脚本"><a href="#创建根证书脚本" class="headerlink" title="创建根证书脚本"></a>创建根证书脚本</h3><p>把脚本存放到<code>/usr/local/src/create-ca.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: create-ca.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 创建根证书</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建k8s集群根证书</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;创建k8s集群根证书&quot;</span></span><br><span class="line">mkdir -p /etc/kubernetes/pki</span><br><span class="line">openssl genrsa -out /etc/kubernetes/pki/ca.key 2048</span><br><span class="line">openssl req -x509 -new -nodes -key /etc/kubernetes/pki/ca.key -subj <span class="string">&quot;/CN=kubernetes-cluster&quot;</span> -days 36500 -out /etc/kubernetes/pki/ca.crt</span><br></pre></td></tr></table></figure><h3 id="执行创建根证书脚本"><a href="#执行创建根证书脚本" class="headerlink" title="执行创建根证书脚本"></a>执行创建根证书脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos1主机中执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-ca.sh</span><br></pre></td></tr></table></figure><h2 id="centos2主机复制根证书"><a href="#centos2主机复制根证书" class="headerlink" title="centos2主机复制根证书"></a>centos2主机复制根证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos2主机中执行</span></span><br><span class="line">mkdir -p /etc/kubernetes/pki</span><br><span class="line">scp root@192.168.56.101:/etc/kubernetes/pki/ca.key /opt/kubernetes/pki/</span><br><span class="line">scp root@192.168.56.101:/etc/kubernetes/pki/ca.crt /opt/kubernetes/pki/</span><br></pre></td></tr></table></figure><h2 id="centos3主机复制根证书"><a href="#centos3主机复制根证书" class="headerlink" title="centos3主机复制根证书"></a>centos3主机复制根证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos3主机中执行</span></span><br><span class="line">mkdir -p /etc/kubernetes/pki</span><br><span class="line">scp root@192.168.56.101:/etc/kubernetes/pki/ca.key /opt/kubernetes/pki/</span><br><span class="line">scp root@192.168.56.101:/etc/kubernetes/pki/ca.crt /opt/kubernetes/pki/</span><br></pre></td></tr></table></figure><h1 id="二、部署etcd服务"><a href="#二、部署etcd服务" class="headerlink" title="二、部署etcd服务"></a>二、部署etcd服务</h1><h2 id="etcd服务部署脚本"><a href="#etcd服务部署脚本" class="headerlink" title="etcd服务部署脚本"></a>etcd服务部署脚本</h2><p>把脚本存放到<code>/usr/local/src/create-etcd.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: create-etcd.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 创建根证书</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境校验</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP1-进行环境校验&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f /etc/kubernetes/pki/ca.key ] || [ ! -f /etc/kubernetes/pki/ca.crt ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验失败&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验成功&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP2-脚本参数信息&quot;</span></span><br><span class="line">ip1=192.168.56.101</span><br><span class="line">ip2=192.168.56.102</span><br><span class="line">ip3=192.168.56.103</span><br><span class="line">current_node_etcd_name=<span class="variable">$1</span></span><br><span class="line">current_node_ip=<span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;etcd服务节点IP：<span class="variable">$ip1</span>, <span class="variable">$ip2</span>, <span class="variable">$ip3</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前节点etcd名称：<span class="variable">$current_node_etcd_name</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前节点IP：<span class="variable">$current_node_ip</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载etcd并解压并把二进制文件复制到/usr/bin目录</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP3-下载etcd并解压并把二进制文件复制到/usr/bin目录&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f /usr/<span class="built_in">local</span>/src/etcd-v3.4.13-linux-amd64.tar.gz ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;已下载etcd&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  wget -O /usr/<span class="built_in">local</span>/src/etcd-v3.4.13-linux-amd64.tar.gz https://github.com/etcd-io/etcd/releases/download/v3.4.13/etcd-v3.4.13-linux-amd64.tar.gz</span><br><span class="line">  <span class="keyword">if</span> [ $? != 0 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;下载etcd失败&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/src/etcd-v3.4.13-linux-amd64</span><br><span class="line">tar -C /usr/<span class="built_in">local</span>/src/ -zxvf /usr/<span class="built_in">local</span>/src/etcd-v3.4.13-linux-amd64.tar.gz</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/etcd-v3.4.13-linux-amd64/etcd /usr/<span class="built_in">local</span>/src/etcd-v3.4.13-linux-amd64/etcdctl /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建etcd系统服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP4-创建etcd系统服务&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/etcd.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=etcd key-value store</span></span><br><span class="line"><span class="string">Documentation=https://github.com/etcd-io/etcd</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">EnvironmentFile=/etc/etcd/etcd.conf</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/etcd</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建etcd证书-服务端证书</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP5-创建etcd证书-服务端证书&quot;</span></span><br><span class="line">mkdir -p /etc/etcd/pki</span><br><span class="line">openssl genrsa -out /etc/etcd/pki/etcd_server.key 2048</span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/etcd/pki/etcd_ssl.cnf</span></span><br><span class="line"><span class="string">[ req ]</span></span><br><span class="line"><span class="string">req_extensions = v3_req</span></span><br><span class="line"><span class="string">distinguished_name = req_distinguished_name</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ req_distinguished_name ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ v3_req ]</span></span><br><span class="line"><span class="string">basicConstraints = CA:FALSE</span></span><br><span class="line"><span class="string">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span></span><br><span class="line"><span class="string">subjectAltName = @alt_names</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ alt_names ]</span></span><br><span class="line"><span class="string">IP.1 = $ip1</span></span><br><span class="line"><span class="string">IP.2 = $ip2</span></span><br><span class="line"><span class="string">IP.3 = $ip3</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">openssl req -new -key /etc/etcd/pki/etcd_server.key -config /etc/etcd/pki/etcd_ssl.cnf -subj <span class="string">&quot;/CN=etcd-server&quot;</span> -out /etc/etcd/pki/etcd_server.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> /etc/etcd/pki/etcd_server.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -days 36500 -extensions v3_req -extfile /etc/etcd/pki/etcd_ssl.cnf -out /etc/etcd/pki/etcd_server.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建etcd证书-客户端证书</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP6-创建etcd证书-客户端证书&quot;</span></span><br><span class="line">openssl genrsa -out /etc/etcd/pki/etcd_client.key 2048</span><br><span class="line">openssl req -new -key /etc/etcd/pki/etcd_client.key -config /etc/etcd/pki/etcd_ssl.cnf -subj <span class="string">&quot;/CN=etcd-client&quot;</span> -out /etc/etcd/pki/etcd_client.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> /etc/etcd/pki/etcd_client.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -days 36500 -extensions v3_req -extfile /etc/etcd/pki/etcd_ssl.cnf -out /etc/etcd/pki/etcd_client.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成etcd配置文件</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP7-生成etcd配置文件&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/etcd/etcd.conf</span></span><br><span class="line"><span class="string">ETCD_NAME=$current_node_etcd_name</span></span><br><span class="line"><span class="string">ETCD_DATA_DIR=/etc/etcd/data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ETCD_CERT_FILE=/etc/etcd/pki/etcd_server.crt</span></span><br><span class="line"><span class="string">ETCD_KEY_FILE=/etc/etcd/pki/etcd_server.key</span></span><br><span class="line"><span class="string">ETCD_TRUSTED_CA_FILE=/etc/kubernetes/pki/ca.crt</span></span><br><span class="line"><span class="string">ETCD_CLIENT_CERT_AUTH=true</span></span><br><span class="line"><span class="string">ETCD_LISTEN_CLIENT_URLS=https://$current_node_ip:2379</span></span><br><span class="line"><span class="string">ETCD_ADVERTISE_CLIENT_URLS=https://$current_node_ip:2379</span></span><br><span class="line"><span class="string">ETCD_PEER_CERT_FILE=/etc/etcd/pki/etcd_server.crt</span></span><br><span class="line"><span class="string">ETCD_PEER_KEY_FILE=/etc/etcd/pki/etcd_server.key</span></span><br><span class="line"><span class="string">ETCD_PEER_TRUSTED_CA_FILE=/etc/kubernetes/pki/ca.crt</span></span><br><span class="line"><span class="string">ETCD_LISTEN_PEER_URLS=https://$current_node_ip:2380</span></span><br><span class="line"><span class="string">ETCD_INITIAL_ADVERTISE_PEER_URLS=https://$current_node_ip:2380</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster</span></span><br><span class="line"><span class="string">ETCD_INITIAL_CLUSTER=&quot;etcd1=https://$ip1:2380,etcd2=https://$ip2:2380,etcd3=https://$ip3:2380&quot;</span></span><br><span class="line"><span class="string">ETCD_INITIAL_CLUSTER_STATE=new</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动etcd服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP8-启动etcd服务&quot;</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start etcd</span><br><span class="line">systemctl <span class="built_in">enable</span> etcd</span><br></pre></td></tr></table></figure><h2 id="etcd部署"><a href="#etcd部署" class="headerlink" title="etcd部署"></a>etcd部署</h2><h3 id="centos1主机部署"><a href="#centos1主机部署" class="headerlink" title="centos1主机部署"></a>centos1主机部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos1主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-etcd.sh etcd1 192.168.56.101</span><br></pre></td></tr></table></figure><h3 id="centos2主机部署"><a href="#centos2主机部署" class="headerlink" title="centos2主机部署"></a>centos2主机部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos2主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-etcd.sh etcd2 192.168.56.102</span><br></pre></td></tr></table></figure><h3 id="centos3主机部署"><a href="#centos3主机部署" class="headerlink" title="centos3主机部署"></a>centos3主机部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos3主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-etcd.sh etcd3 192.168.56.103</span><br></pre></td></tr></table></figure><h3 id="查看etcd高可用集群健康状态"><a href="#查看etcd高可用集群健康状态" class="headerlink" title="查看etcd高可用集群健康状态"></a>查看etcd高可用集群健康状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">etcdctl --cacert=/etc/kubernetes/pki/ca.crt \</span><br><span class="line">--cert=/etc/etcd/pki/etcd_client.crt \</span><br><span class="line">--key=/etc/etcd/pki/etcd_client.key \</span><br><span class="line">--endpoints=https://192.168.56.101:2379,https://192.168.56.102:2379,https://192.168.56.103:2379 \</span><br><span class="line">endpoint health</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="k1.png"></p><h1 id="三、部署kube-apiserver服务"><a href="#三、部署kube-apiserver服务" class="headerlink" title="三、部署kube-apiserver服务"></a>三、部署kube-apiserver服务</h1><h2 id="kube-apiserver服务部署脚本"><a href="#kube-apiserver服务部署脚本" class="headerlink" title="kube-apiserver服务部署脚本"></a>kube-apiserver服务部署脚本</h2><p>把脚本存放到<code>/usr/local/src/create-kube-apiserver.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: create-kube-apiserver.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 部署kube-apiserver服务</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"><span class="comment"># PARAMS:</span></span><br><span class="line"><span class="comment">#   - $1: 当前节点IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境校验</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP1-进行环境校验&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f /etc/kubernetes/pki/ca.key ] || [ ! -f /etc/kubernetes/pki/ca.crt ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验失败&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验成功&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP2-脚本参数信息&quot;</span></span><br><span class="line">ip1=192.168.56.101</span><br><span class="line">ip2=192.168.56.102</span><br><span class="line">ip3=192.168.56.103</span><br><span class="line">ip_vip=192.168.56.250</span><br><span class="line">current_node_ip=<span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;kubernetes-master服务节点IP：<span class="variable">$ip1</span>, <span class="variable">$ip2</span>, <span class="variable">$ip3</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;kubernetes-master的vip：<span class="variable">$ip_vip</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前节点IP：<span class="variable">$current_node_ip</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载kubernetes并解压并把二进制文件复制到/usr/bin目录</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP3-下载kubernetes并解压并把二进制文件复制到/usr/bin目录&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;已下载kubernetes&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  wget -O /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz https://dl.k8s.io/v1.19.0/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">  <span class="keyword">if</span> [ $? != 0 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;下载kubernetes失败&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/src/kubernetes</span><br><span class="line">tar -C /usr/<span class="built_in">local</span>/src/ -zxvf /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/kubernetes/server/bin/kube-apiserver /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建kube-apiserver系统服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP4-创建kube-apiserver系统服务&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/kube-apiserver.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes API Server</span></span><br><span class="line"><span class="string">Documentation=https://github.com/kubernetes/kubernetes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">EnvironmentFile=/etc/kubernetes/apiserver.conf</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kube-apiserver \$KUBE_API_ARGS</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建kube-apiserver证书</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP5-创建kube-apiserver证书&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/kubernetes/pki/master_ssl.cnf</span></span><br><span class="line"><span class="string">[ req ]</span></span><br><span class="line"><span class="string">req_extensions = v3_req</span></span><br><span class="line"><span class="string">distinguished_name = req_distinguished_name</span></span><br><span class="line"><span class="string">[ req_distinguished_name ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ v3_req ]</span></span><br><span class="line"><span class="string">basicConstraints = CA:FALSE</span></span><br><span class="line"><span class="string">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span></span><br><span class="line"><span class="string">subjectAltName = @alt_names</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ alt_names ]</span></span><br><span class="line"><span class="string">DNS.1 = kubernetes</span></span><br><span class="line"><span class="string">DNS.2 = kubernetes.default</span></span><br><span class="line"><span class="string">DNS.3 = kubernetes.default.svc</span></span><br><span class="line"><span class="string">DNS.4 = kubernetes.default.svc.cluster.local</span></span><br><span class="line"><span class="string">DNS.5 = centos1</span></span><br><span class="line"><span class="string">DNS.6 = centos2</span></span><br><span class="line"><span class="string">DNS.7 = centos3</span></span><br><span class="line"><span class="string">IP.1 = 169.169.0.1</span></span><br><span class="line"><span class="string">IP.2 = $ip1</span></span><br><span class="line"><span class="string">IP.3 = $ip2</span></span><br><span class="line"><span class="string">IP.4 = $ip3</span></span><br><span class="line"><span class="string">IP.5 = $ip_vip</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">openssl genrsa -out /etc/kubernetes/pki/apiserver.key 2048</span><br><span class="line">openssl req -new -key /etc/kubernetes/pki/apiserver.key -config /etc/kubernetes/pki/master_ssl.cnf -subj <span class="string">&quot;/CN=kube-apiserver&quot;</span> -out /etc/kubernetes/pki/apiserver.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> /etc/kubernetes/pki/apiserver.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -days 36500 -extensions v3_req -extfile /etc/kubernetes/pki/master_ssl.cnf -out /etc/kubernetes/pki/apiserver.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成kube-apiserver配置文件</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP6-生成kube-apiserver配置文件&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/kubernetes/apiserver.conf</span></span><br><span class="line"><span class="string">KUBE_API_ARGS=&quot;--insecure-port=0 \</span></span><br><span class="line"><span class="string">--secure-port=6443 \</span></span><br><span class="line"><span class="string">--advertise-address=$current_node_ip \</span></span><br><span class="line"><span class="string">--tls-cert-file=/etc/kubernetes/pki/apiserver.crt \</span></span><br><span class="line"><span class="string">--tls-private-key-file=/etc/kubernetes/pki/apiserver.key \</span></span><br><span class="line"><span class="string">--client-ca-file=/etc/kubernetes/pki/ca.crt \</span></span><br><span class="line"><span class="string">--apiserver-count=3 --endpoint-reconciler-type=master-count \</span></span><br><span class="line"><span class="string">--etcd-servers=https://$ip1:2379,https://$ip2:2379,https://$ip3:2379 \</span></span><br><span class="line"><span class="string">--etcd-cafile=/etc/kubernetes/pki/ca.crt \</span></span><br><span class="line"><span class="string">--etcd-certfile=/etc/etcd/pki/etcd_client.crt \</span></span><br><span class="line"><span class="string">--etcd-keyfile=/etc/etcd/pki/etcd_client.key \</span></span><br><span class="line"><span class="string">--service-cluster-ip-range=169.169.0.0/16 \</span></span><br><span class="line"><span class="string">--service-node-port-range=30000-32767 \</span></span><br><span class="line"><span class="string">--allow-privileged=true \</span></span><br><span class="line"><span class="string">--logtostderr=false --log-dir=/var/log/kubernetes --v=0&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动apiserver服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP7-启动kube-apiserver服务&quot;</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-apiserver</span><br><span class="line">systemctl <span class="built_in">enable</span> kube-apiserver</span><br></pre></td></tr></table></figure><h2 id="kube-apiserver部署"><a href="#kube-apiserver部署" class="headerlink" title="kube-apiserver部署"></a>kube-apiserver部署</h2><h3 id="centos1主机部署-1"><a href="#centos1主机部署-1" class="headerlink" title="centos1主机部署"></a>centos1主机部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos1主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-kube-apiserver.sh 192.168.56.101</span><br></pre></td></tr></table></figure><h3 id="centos2主机部署-1"><a href="#centos2主机部署-1" class="headerlink" title="centos2主机部署"></a>centos2主机部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos2主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-kube-apiserver.sh 192.168.56.102</span><br></pre></td></tr></table></figure><h3 id="centos3主机部署-1"><a href="#centos3主机部署-1" class="headerlink" title="centos3主机部署"></a>centos3主机部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos3主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-kube-apiserver.sh 192.168.56.103</span><br></pre></td></tr></table></figure><h1 id="四、创建kubernetes客户端CA证书和kubeconfig配置文件"><a href="#四、创建kubernetes客户端CA证书和kubeconfig配置文件" class="headerlink" title="四、创建kubernetes客户端CA证书和kubeconfig配置文件"></a>四、创建kubernetes客户端CA证书和kubeconfig配置文件</h1><p>kube-controller-manager、kube-scheduler、kubelet和kube-proxy服务作为客户端连接kube-apiserver服务，需要为它们创建客户端CA证书进行访问。<br>此外，统一创建一个kubeconfig文件作为kube-controller-manager、kube-scheduler、kubelet和kube-proxy服务连接kube-apiserver服务的配置文件，也作为后续kubectl命令工具连接kube-apiserver服务的配置文件。</p><h2 id="kubernetes客户端CA证书脚本"><a href="#kubernetes客户端CA证书脚本" class="headerlink" title="kubernetes客户端CA证书脚本"></a>kubernetes客户端CA证书脚本</h2><p>把脚本存放到<code>/usr/local/src/create-kube-client-ca.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: create-kube-client-ca.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 创建kubernetes客户端CA证书脚本</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line">openssl genrsa -out /etc/kubernetes/pki/client.key 2048</span><br><span class="line"><span class="comment"># 其中 -subj 参数中的 &quot;/CN&quot; 的名称可以被设置为 &quot;admin&quot;，用于标识连接 kube-apiserver 的客户端用户名称</span></span><br><span class="line">openssl req -new -key /etc/kubernetes/pki/client.key -subj <span class="string">&quot;/CN=admin&quot;</span> -out /etc/kubernetes/pki/client.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> /etc/kubernetes/pki/client.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out /etc/kubernetes/pki/client.crt -days 36500</span><br></pre></td></tr></table></figure><h2 id="执行客户端CA证书脚本"><a href="#执行客户端CA证书脚本" class="headerlink" title="执行客户端CA证书脚本"></a>执行客户端CA证书脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-kube-client-ca.sh</span><br></pre></td></tr></table></figure><h2 id="创建kubeconfig配置文件"><a href="#创建kubeconfig配置文件" class="headerlink" title="创建kubeconfig配置文件"></a>创建kubeconfig配置文件</h2><p>把脚本存放到<code>/usr/local/src/create-kubeconfig.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: create-kubeconfig.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 创建kubeconfig配置文件</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/kubernetes/kubeconfig</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Config</span></span><br><span class="line"><span class="string">clusters:</span></span><br><span class="line"><span class="string">- name: default</span></span><br><span class="line"><span class="string">  cluster:</span></span><br><span class="line"><span class="string">    server: https://192.168.56.250:9443</span></span><br><span class="line"><span class="string">    certificate-authority: /etc/kubernetes/pki/ca.crt</span></span><br><span class="line"><span class="string">users:</span></span><br><span class="line"><span class="string">- name: admin</span></span><br><span class="line"><span class="string">  user:</span></span><br><span class="line"><span class="string">    client-certificate: /etc/kubernetes/pki/client.crt</span></span><br><span class="line"><span class="string">    client-key: /etc/kubernetes/pki/client.key</span></span><br><span class="line"><span class="string">contexts:</span></span><br><span class="line"><span class="string">- context:</span></span><br><span class="line"><span class="string">    cluster: default</span></span><br><span class="line"><span class="string">    user: admin</span></span><br><span class="line"><span class="string">  name: default</span></span><br><span class="line"><span class="string">current-context: default</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="执行kubeconfig创建脚本"><a href="#执行kubeconfig创建脚本" class="headerlink" title="执行kubeconfig创建脚本"></a>执行kubeconfig创建脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-kubeconfig.sh</span><br></pre></td></tr></table></figure><h1 id="五、部署kube-controller-manager服务"><a href="#五、部署kube-controller-manager服务" class="headerlink" title="五、部署kube-controller-manager服务"></a>五、部署kube-controller-manager服务</h1><h2 id="kube-controller-manager服务部署脚本"><a href="#kube-controller-manager服务部署脚本" class="headerlink" title="kube-controller-manager服务部署脚本"></a>kube-controller-manager服务部署脚本</h2><p>把脚本存放到<code>/usr/local/src/create-kube-controller-manager.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: create-kube-apiserver.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 部署kube-apiserver服务</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"><span class="comment"># PARAMS:</span></span><br><span class="line"><span class="comment">#   - $1: 当前节点IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境校验</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP1-进行环境校验&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f /etc/kubernetes/pki/ca.key ] || [ ! -f /etc/kubernetes/pki/ca.crt ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验失败，缺失ca根证书&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验成功，已有ca根证书&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f /etc/kubernetes/pki/client.key ] || [ ! -f /etc/kubernetes/pki/client.csr ] || [ ! -f /etc/kubernetes/pki/client.crt ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验失败，缺失client相关证书&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验成功，已有client相关证书&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载kubernetes并解压并把二进制文件复制到/usr/bin目录</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP2-下载kubernetes并解压并把二进制文件复制到/usr/bin目录&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;已下载kubernetes&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  wget -O /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz https://dl.k8s.io/v1.19.0/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">  <span class="keyword">if</span> [ $? != 0 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;下载kubernetes失败&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/src/kubernetes</span><br><span class="line">tar -C /usr/<span class="built_in">local</span>/src/ -zxvf /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/kubernetes/server/bin/kube-controller-manager /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建kube-controller-manager系统服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP3-创建kube-controller-manager系统服务&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/kube-controller-manager.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes Controller Manager</span></span><br><span class="line"><span class="string">Documentation=https://github.com/kubernetes/kubernetes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">EnvironmentFile=/etc/kubernetes/controller-manager.conf</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kube-controller-manager \$KUBE_CONTROLLER_MANAGER_ARGS</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成kube-controller-manager配置文件</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP4-生成kube-controller-manager配置文件&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/kubernetes/controller-manager.conf</span></span><br><span class="line"><span class="string">KUBE_CONTROLLER_MANAGER_ARGS=&quot;--kubeconfig=/etc/kubernetes/kubeconfig \</span></span><br><span class="line"><span class="string">--leader-elect=true \</span></span><br><span class="line"><span class="string">--service-cluster-ip-range=169.169.0.0/16 \</span></span><br><span class="line"><span class="string">--service-account-private-key-file=/etc/kubernetes/pki/apiserver.key \</span></span><br><span class="line"><span class="string">--root-ca-file=/etc/kubernetes/pki/ca.crt \</span></span><br><span class="line"><span class="string">--log-dir=/var/log/kubernetes --logtostderr=false --v=0&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动kube-controller-manager服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP5-启动kube-controller-manager服务&quot;</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-controller-manager</span><br><span class="line">systemctl <span class="built_in">enable</span> kube-controller-manager</span><br></pre></td></tr></table></figure><h2 id="kube-controller-manager部署"><a href="#kube-controller-manager部署" class="headerlink" title="kube-controller-manager部署"></a>kube-controller-manager部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-kube-controller-manager.sh</span><br></pre></td></tr></table></figure><h1 id="六、部署kube-scheduler服务"><a href="#六、部署kube-scheduler服务" class="headerlink" title="六、部署kube-scheduler服务"></a>六、部署kube-scheduler服务</h1><h2 id="kube-scheduler服务部署脚本"><a href="#kube-scheduler服务部署脚本" class="headerlink" title="kube-scheduler服务部署脚本"></a>kube-scheduler服务部署脚本</h2><p>把脚本存放到<code>/usr/local/src/create-kube-scheduler.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: create-kube-apiserver.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 部署kube-apiserver服务</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"><span class="comment"># PARAMS:</span></span><br><span class="line"><span class="comment">#   - $1: 当前节点IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 环境校验</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP1-进行环境校验&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f /etc/kubernetes/pki/ca.key ] || [ ! -f /etc/kubernetes/pki/ca.crt ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验失败，缺失ca根证书&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验成功，已有ca根证书&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f /etc/kubernetes/pki/client.key ] || [ ! -f /etc/kubernetes/pki/client.csr ] || [ ! -f /etc/kubernetes/pki/client.crt ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验失败，缺失client相关证书&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;环境校验成功，已有client相关证书&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载kubernetes并解压并把二进制文件复制到/usr/bin目录</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP2-下载kubernetes并解压并把二进制文件复制到/usr/bin目录&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;已下载kubernetes&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  wget -O /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz https://dl.k8s.io/v1.19.0/kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">  <span class="keyword">if</span> [ $? != 0 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;下载kubernetes失败&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/src/kubernetes</span><br><span class="line">tar -C /usr/<span class="built_in">local</span>/src/ -zxvf /usr/<span class="built_in">local</span>/src/kubernetes-server-v1.19.0.tar.gz</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/kubernetes/server/bin/kube-scheduler /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建kube-scheduler系统服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP3-创建kube-scheduler系统服务&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /usr/lib/systemd/system/kube-scheduler.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Kubernetes Scheduler</span></span><br><span class="line"><span class="string">Documentation=https://github.com/kubernetes/kubernetes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">EnvironmentFile=/etc/kubernetes/scheduler.conf</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/kube-scheduler \$KUBE_SCHEDULER_ARGS</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成kube-scheduler配置文件</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP4-生成kube-scheduler配置文件&quot;</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/kubernetes/scheduler.conf</span></span><br><span class="line"><span class="string">KUBE_SCHEDULER_ARGS=&quot;--kubeconfig=/etc/kubernetes/kubeconfig \</span></span><br><span class="line"><span class="string">--leader-elect=true \</span></span><br><span class="line"><span class="string">--log-dir=/var/log/kubernetes --logtostderr=false --v=0&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动kube-scheduler服务</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;STEP5-启动kube-scheduler服务&quot;</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-scheduler</span><br><span class="line">systemctl <span class="built_in">enable</span> kube-scheduler</span><br></pre></td></tr></table></figure><h2 id="kube-scheduler部署"><a href="#kube-scheduler部署" class="headerlink" title="kube-scheduler部署"></a>kube-scheduler部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有主机执行</span></span><br><span class="line">sh /usr/<span class="built_in">local</span>/src/create-kube-scheduler.sh</span><br></pre></td></tr></table></figure><h1 id="七、安装Docker"><a href="#七、安装Docker" class="headerlink" title="七、安装Docker"></a>七、安装Docker</h1><p>在centos1和centos2主机上部署</p><h2 id="获取阿里云docker-ce景象仓库"><a href="#获取阿里云docker-ce景象仓库" class="headerlink" title="获取阿里云docker-ce景象仓库"></a>获取阿里云docker-ce景象仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce-19.03.15-3.el7.x86_64</span><br></pre></td></tr></table></figure><h2 id="修改Docker的Cgroup驱动程序"><a href="#修改Docker的Cgroup驱动程序" class="headerlink" title="修改Docker的Cgroup驱动程序"></a>修改Docker的Cgroup驱动程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;100m&quot;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h1 id="八、部署HAProxy"><a href="#八、部署HAProxy" class="headerlink" title="八、部署HAProxy"></a>八、部署HAProxy</h1><p>在centos1和centos2主机上部署</p><h2 id="创建HAProxy配置文件"><a href="#创建HAProxy配置文件" class="headerlink" title="创建HAProxy配置文件"></a>创建HAProxy配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/haproxy</span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/haproxy/haproxy.cfg</span></span><br><span class="line"><span class="string">global</span></span><br><span class="line"><span class="string">    log             127.0.0.1 local2</span></span><br><span class="line"><span class="string">    chroot          /var/lib/haproxy</span></span><br><span class="line"><span class="string">    pidfile         /var/run/haproxy.pid</span></span><br><span class="line"><span class="string">    maxconn         4096</span></span><br><span class="line"><span class="string">    user            haproxy</span></span><br><span class="line"><span class="string">    group           haproxy</span></span><br><span class="line"><span class="string">    daemon</span></span><br><span class="line"><span class="string">    stats           socket          /var/lib/haproxy/stats</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">defaults</span></span><br><span class="line"><span class="string">    mode            http</span></span><br><span class="line"><span class="string">    log             global</span></span><br><span class="line"><span class="string">    option          httplog</span></span><br><span class="line"><span class="string">    option          dontlognull</span></span><br><span class="line"><span class="string">    option          http-server-close</span></span><br><span class="line"><span class="string">    option          forwardfor except 127.0.0.0/8</span></span><br><span class="line"><span class="string">    option          redispatch</span></span><br><span class="line"><span class="string">    retries         3</span></span><br><span class="line"><span class="string">    timeout http-request    10s</span></span><br><span class="line"><span class="string">    timeout queue           1m</span></span><br><span class="line"><span class="string">    timeout connect         10s</span></span><br><span class="line"><span class="string">    timeout client          1m</span></span><br><span class="line"><span class="string">    timeout server          1m</span></span><br><span class="line"><span class="string">    timeout http-keep-alive 10s</span></span><br><span class="line"><span class="string">    timeout check           10s</span></span><br><span class="line"><span class="string">    maxconn         3000</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">frontend kube-apiserver</span></span><br><span class="line"><span class="string">    mode            tcp</span></span><br><span class="line"><span class="string">    bind            *:9443</span></span><br><span class="line"><span class="string">    option          tcplog</span></span><br><span class="line"><span class="string">    default_backend kube-apiserver</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">listen stats</span></span><br><span class="line"><span class="string">    mode            http</span></span><br><span class="line"><span class="string">    bind            *:8888</span></span><br><span class="line"><span class="string">    stats auth      admin:password</span></span><br><span class="line"><span class="string">    stats refresh   5s</span></span><br><span class="line"><span class="string">    stats realm     HAProxy\ Statistics</span></span><br><span class="line"><span class="string">    stats uri       /stats</span></span><br><span class="line"><span class="string">    log             127.0.0.1 local3 err</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">backend kube-apiserver</span></span><br><span class="line"><span class="string">    mode            tcp</span></span><br><span class="line"><span class="string">    balance         roundrobin</span></span><br><span class="line"><span class="string">    server k8s-master1 192.168.56.101:6443 check</span></span><br><span class="line"><span class="string">    server k8s-master2 192.168.56.102:6443 check</span></span><br><span class="line"><span class="string">    server k8s-master3 192.168.56.103:6443 check</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="基于Docker部署HAProxy"><a href="#基于Docker部署HAProxy" class="headerlink" title="基于Docker部署HAProxy"></a>基于Docker部署HAProxy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name k8s-haproxy \</span><br><span class="line">--net=host \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /etc/haproxy/haproxy.cfg:/usr/<span class="built_in">local</span>/etc/haproxy/haproxy.cfg:ro \</span><br><span class="line">haproxytech/haproxy-debian:2.3</span><br></pre></td></tr></table></figure><h2 id="访问测试"><a href="#访问测试" class="headerlink" title="访问测试"></a>访问测试</h2><p>访问：<code>http://192.168.56.101:8888/stats</code>或<code>http://192.168.56.102:8888/stats</code>，可见三个节点的状态都处于<code>UP</code>状态则为正常。<br>结果截图<br><img src="k2.png"></p><h1 id="九、部署Keepalived"><a href="#九、部署Keepalived" class="headerlink" title="九、部署Keepalived"></a>九、部署Keepalived</h1><h2 id="创建Keepalived配置文件"><a href="#创建Keepalived配置文件" class="headerlink" title="创建Keepalived配置文件"></a>创建Keepalived配置文件</h2><h3 id="centos1主机的配置文件"><a href="#centos1主机的配置文件" class="headerlink" title="centos1主机的配置文件"></a>centos1主机的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/keepalived</span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/keepalived/keepalived.conf</span></span><br><span class="line"><span class="string">! Configuration File for keepalived</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">  router_id LVS_1</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_script checkhaproxy &#123;</span></span><br><span class="line"><span class="string">  script &quot;/usr/bin/check-haproxy.sh&quot;</span></span><br><span class="line"><span class="string">  interval 2</span></span><br><span class="line"><span class="string">  weight -30</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">  state MASTER</span></span><br><span class="line"><span class="string">  interface enp0s8</span></span><br><span class="line"><span class="string">  virtual_router_id 51</span></span><br><span class="line"><span class="string">  priority 100</span></span><br><span class="line"><span class="string">  advert_int 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">    192.168.56.250/24 dev enp0s8</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  authentication &#123;</span></span><br><span class="line"><span class="string">    auth_type PASS</span></span><br><span class="line"><span class="string">    auth_pass password</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  track_script &#123;</span></span><br><span class="line"><span class="string">    checkhaproxy</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/keepalived/check-haproxy.sh</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">count=\`netstat -apn | grep 9443 | wc -l\`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [ $count -gt 0 ]; then</span></span><br><span class="line"><span class="string">  exit 0</span></span><br><span class="line"><span class="string">else </span></span><br><span class="line"><span class="string">  exit 1</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h3 id="centos2主机的配置文件"><a href="#centos2主机的配置文件" class="headerlink" title="centos2主机的配置文件"></a>centos2主机的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/keepalived</span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/keepalived/keepalived.conf</span></span><br><span class="line"><span class="string">! Configuration File for keepalived</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">global_defs &#123;</span></span><br><span class="line"><span class="string">  router_id LVS_2</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_script checkhaproxy &#123;</span></span><br><span class="line"><span class="string">  script &quot;/usr/bin/check-haproxy.sh&quot;</span></span><br><span class="line"><span class="string">  interval 2</span></span><br><span class="line"><span class="string">  weight -30</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">vrrp_instance VI_1 &#123;</span></span><br><span class="line"><span class="string">  state BACKUP</span></span><br><span class="line"><span class="string">  interface enp0s8</span></span><br><span class="line"><span class="string">  virtual_router_id 51</span></span><br><span class="line"><span class="string">  priority 100</span></span><br><span class="line"><span class="string">  advert_int 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  virtual_ipaddress &#123;</span></span><br><span class="line"><span class="string">    192.168.56.250/24 dev enp0s8</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  authentication &#123;</span></span><br><span class="line"><span class="string">    auth_type PASS</span></span><br><span class="line"><span class="string">    auth_pass password</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  track_script &#123;</span></span><br><span class="line"><span class="string">    checkhaproxy</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/keepalived/check-haproxy.sh</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">count=\`netstat -apn | grep 9443 | wc -l\`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [ $count -gt 0 ]; then</span></span><br><span class="line"><span class="string">  exit 0</span></span><br><span class="line"><span class="string">else </span></span><br><span class="line"><span class="string">  exit 1</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="基于Docker部署Keepalived"><a href="#基于Docker部署Keepalived" class="headerlink" title="基于Docker部署Keepalived"></a>基于Docker部署Keepalived</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name k8s-keepalived \</span><br><span class="line">--restart=always \</span><br><span class="line">--net=host \</span><br><span class="line">--cap-add=NET_ADMIN --cap-add=NET_BROADCAST --cap-add=NET_RAW \</span><br><span class="line">-v /etc/keepalived/keepalived.conf:/container/service/keepalived/assets/keepalived.conf \</span><br><span class="line">-v /etc/keepalived/check-haproxy.sh:/usr/bin/check-haproxy.sh \</span><br><span class="line">osixia/keepalived:2.0.20 --copy-service</span><br></pre></td></tr></table></figure><h2 id="查看vip状态"><a href="#查看vip状态" class="headerlink" title="查看vip状态"></a>查看vip状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在centos1主机执行</span></span><br><span class="line">ip a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在centos2主机执行</span></span><br><span class="line">ip a</span><br></pre></td></tr></table></figure><p>结果截图<br>centos1主机中的<code>enp0s8</code>网卡获取到vip<br><img src="k3.png"></p><p>centos2主机中的<code>enp0s8</code>网卡则没有获取到vip<br><img src="k4.png"></p><h1 id="十、查看Kubernetes-Master节点是否高可用"><a href="#十、查看Kubernetes-Master节点是否高可用" class="headerlink" title="十、查看Kubernetes-Master节点是否高可用"></a>十、查看Kubernetes-Master节点是否高可用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 三个kube-apiserver服务通过vip：192.168.56.250:9443暴露出来</span></span><br><span class="line">curl -v -k https://192.168.56.250:9443</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="k5.png"><br>至此，Kubernetes-Master的三个主节点服务已全部启动完成。</p><h1 id="十一、移除Kubernetes-Master高可用集群所有服务"><a href="#十一、移除Kubernetes-Master高可用集群所有服务" class="headerlink" title="十一、移除Kubernetes-Master高可用集群所有服务"></a>十一、移除Kubernetes-Master高可用集群所有服务</h1><h2 id="移除Keepalived服务"><a href="#移除Keepalived服务" class="headerlink" title="移除Keepalived服务"></a>移除Keepalived服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在centos1和centos2主机中执行</span></span><br><span class="line"><span class="comment"># 关闭基于Docker的Keepalived服务</span></span><br><span class="line">docker stop k8s-keepalived</span><br><span class="line">docker rm k8s-keepalived</span><br><span class="line"><span class="comment"># 移除Keepalived配置信息</span></span><br><span class="line">rm -rf /etc/keepalived</span><br></pre></td></tr></table></figure><h2 id="移除HAProxy服务"><a href="#移除HAProxy服务" class="headerlink" title="移除HAProxy服务"></a>移除HAProxy服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在centos1和centos2主机中执行</span></span><br><span class="line"><span class="comment"># 关闭基于Docker的HAProxy服务</span></span><br><span class="line">docker stop k8s-haproxy</span><br><span class="line">docker rm k8s-haproxy</span><br></pre></td></tr></table></figure><h2 id="移除Docker服务"><a href="#移除Docker服务" class="headerlink" title="移除Docker服务"></a>移除Docker服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭Docker服务</span></span><br><span class="line">systemctl stop docker</span><br><span class="line">systemctl <span class="built_in">disable</span> docker</span><br><span class="line"><span class="comment"># 删除Docker服务</span></span><br><span class="line">yum remove -y docker-ce-19.03.15-3.el7.x86_64</span><br><span class="line"><span class="comment"># 移除Docker配置信息</span></span><br><span class="line">rm -rf /etc/docker</span><br></pre></td></tr></table></figure><h2 id="移除kube-scheduler服务"><a href="#移除kube-scheduler服务" class="headerlink" title="移除kube-scheduler服务"></a>移除kube-scheduler服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: clean-kube-scheduler.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 移除kube-scheduler服务</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭kube-scheduler服务</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;关闭kube-scheduler服务&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ `systemctl status kube-scheduler | grep <span class="string">&quot;Active: active (running)&quot;</span> | wc -l` == 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  systemctl stop kube-scheduler</span><br><span class="line">  systemctl <span class="built_in">disable</span> kube-scheduler</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;移除相关文件和目录&quot;</span></span><br><span class="line">rm -rf /etc/kubernetes/scheduler*</span><br><span class="line">rm -rf /etc/systemd/system/multi-user.target.wants/kube-scheduler.service</span><br><span class="line">rm -rf /usr/lib/systemd/system/kube-scheduler.service</span><br><span class="line">rm -rf /usr/bin/kube-scheduler</span><br></pre></td></tr></table></figure><h2 id="移除kube-controller-manager服务"><a href="#移除kube-controller-manager服务" class="headerlink" title="移除kube-controller-manager服务"></a>移除kube-controller-manager服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: clean-kube-controller-manager.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 移除kube-controller-manager服务</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭kube-controller-manager服务</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;关闭kube-controller-manager服务&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ `systemctl status kube-controller-manager | grep <span class="string">&quot;Active: active (running)&quot;</span> | wc -l` == 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  systemctl stop kube-controller-manager</span><br><span class="line">  systemctl <span class="built_in">disable</span> kube-controller-manager</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;移除相关文件和目录&quot;</span></span><br><span class="line">rm -rf /etc/kubernetes/controller-manager*</span><br><span class="line">rm -rf /etc/systemd/system/multi-user.target.wants/kube-controller-manager.service</span><br><span class="line">rm -rf /usr/lib/systemd/system/kube-controller-manager.service</span><br><span class="line">rm -rf /usr/bin/kube-controller-manager</span><br></pre></td></tr></table></figure><h2 id="移除Kubernetes客户端证书和kubeconfig配置文件"><a href="#移除Kubernetes客户端证书和kubeconfig配置文件" class="headerlink" title="移除Kubernetes客户端证书和kubeconfig配置文件"></a>移除Kubernetes客户端证书和kubeconfig配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: clean-kube-ca-kubeconfig.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 移除Kubernetes客户端证书和kubeconfig配置文件</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;移除Kubernetes客户端证书和kubeconfig配置文件&quot;</span></span><br><span class="line">rm -rf /etc/kubernetes/kubeconfig</span><br><span class="line">rm -rf /etc/kubernetes/pki/client*</span><br></pre></td></tr></table></figure><h2 id="移除kube-apiserver服务"><a href="#移除kube-apiserver服务" class="headerlink" title="移除kube-apiserver服务"></a>移除kube-apiserver服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: clean-kube-apiserver.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 移除kube-apiserver服务</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭kube-apiserver服务</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;关闭kube-apiserver服务&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ `systemctl status kube-apiserver | grep <span class="string">&quot;Active: active (running)&quot;</span> | wc -l` == 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  systemctl stop kube-apiserver</span><br><span class="line">  systemctl <span class="built_in">disable</span> kube-apiserver</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;移除相关文件和目录&quot;</span></span><br><span class="line">rm -rf /etc/kubernetes/apiserver*</span><br><span class="line">rm -rf /etc/kubernetes/pki/apiserver*</span><br><span class="line">rm -rf /etc/kubernetes/pki/master_ssl.cnf</span><br><span class="line">rm -rf /etc/systemd/system/multi-user.target.wants/kube-apiserver.service</span><br><span class="line">rm -rf /usr/lib/systemd/system/kube-apiserver.service</span><br><span class="line">rm -rf /usr/bin/kube-apiserver</span><br></pre></td></tr></table></figure><h2 id="移除etcd服务"><a href="#移除etcd服务" class="headerlink" title="移除etcd服务"></a>移除etcd服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: clean-etcd.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 移除etcd服务</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭etcd服务</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;关闭etcd服务&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ `systemctl status etcd | grep <span class="string">&quot;Active: active (running)&quot;</span> | wc -l` == 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  systemctl stop etcd</span><br><span class="line">  systemctl <span class="built_in">disable</span> etcd</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;移除相关文件和目录&quot;</span></span><br><span class="line">rm -rf /etc/etcd</span><br><span class="line">rm -rf /etc/systemd/system/multi-user.target.wants/etcd.service</span><br><span class="line">rm -rf /usr/lib/systemd/system/etcd.service</span><br><span class="line">rm -rf /usr/bin/etcd</span><br><span class="line">rm -rf /usr/bin/etcdctl</span><br></pre></td></tr></table></figure><h2 id="移除ca根证书和相关目录"><a href="#移除ca根证书和相关目录" class="headerlink" title="移除ca根证书和相关目录"></a>移除ca根证书和相关目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># SHELL_NAME: clean-ca.sh</span></span><br><span class="line"><span class="comment"># SHELL_DESC: 移除ca根证书和相关目录</span></span><br><span class="line"><span class="comment"># AUTHOR: gaussli</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;移除ca根证书和相关目录&quot;</span></span><br><span class="line">rm -rf /etc/kubernetes</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;零、目录&quot;&gt;&lt;a href=&quot;#零、目录&quot; class=&quot;headerlink&quot; title=&quot;零、目录&quot;&gt;&lt;/a&gt;零、目录&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2021/09/12/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%9</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="Kubernetes" scheme="http://gaussli.com/categories/tech/container/kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="二进制" scheme="http://gaussli.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
    <category term="部署" scheme="http://gaussli.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
    <category term="高可用" scheme="http://gaussli.com/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】修改时间为上海时间</title>
    <link href="http://gaussli.com/2021/09/11/%E3%80%90linux%E3%80%91%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4%E4%B8%BA%E4%B8%8A%E6%B5%B7%E6%97%B6%E9%97%B4/"/>
    <id>http://gaussli.com/2021/09/11/%E3%80%90linux%E3%80%91%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4%E4%B8%BA%E4%B8%8A%E6%B5%B7%E6%97%B6%E9%97%B4/</id>
    <published>2021-09-11T07:49:27.000Z</published>
    <updated>2021-09-12T09:15:50.776Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS7纯默认安装的时间会是美国东部时间（EDT）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2021年 09月 11日 星期六 03:42:28 EDT</span></span><br><span class="line">date</span><br></pre></td></tr></table></figure><p>修改为上海时间（CST）（中国标准时间）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/localtime /etc/localtime.bak</span><br><span class="line">ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>再次查看时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2021年 09月 11日 星期六 15:44:50 CST</span></span><br><span class="line">date</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;CentOS7纯默认安装的时间会是美国东部时间（EDT）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Linux" scheme="http://gaussli.com/categories/tech/linux/"/>
    
    
    <category term="时间" scheme="http://gaussli.com/tags/%E6%97%B6%E9%97%B4/"/>
    
    <category term="linux" scheme="http://gaussli.com/tags/linux/"/>
    
    <category term="localtime" scheme="http://gaussli.com/tags/localtime/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】K3S部署安装</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91k3s%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91k3s%E9%83%A8%E7%BD%B2%E5%AE%89%E8%A3%85/</id>
    <published>2021-07-26T15:06:14.000Z</published>
    <updated>2021-07-26T15:10:04.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本文针对版本v1-21-2-k3s1"><a href="#本文针对版本v1-21-2-k3s1" class="headerlink" title="本文针对版本v1.21.2+k3s1"></a>本文针对版本v1.21.2+k3s1</h1><h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p><a href="https://k3s.io/">https://k3s.io/</a></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 关闭防火墙</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h1 id="完成可联网情况下"><a href="#完成可联网情况下" class="headerlink" title="完成可联网情况下"></a>完成可联网情况下</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> INSTALL_K3S_VERSION=v1<span class="number">.21</span><span class="number">.2</span>+k3s1</span><br><span class="line"><span class="keyword">export</span> INSTALL_K3S_EXEC=<span class="string">&quot;--write-kubeconfig ~/.kube/config --cluster-cidr  10.72.0.0/16 --service-cidr  10.73.0.0/16&quot;</span></span><br><span class="line">curl -sfL https:<span class="comment">//get.k3s.io | sh -</span></span><br></pre></td></tr></table></figure><h1 id="连不上Github情况下"><a href="#连不上Github情况下" class="headerlink" title="连不上Github情况下"></a>连不上Github情况下</h1><h2 id="1-上传相关工具、k3s二进制包、k3s安装脚本、Nginx测试yaml文件到服务器"><a href="#1-上传相关工具、k3s二进制包、k3s安装脚本、Nginx测试yaml文件到服务器" class="headerlink" title="1. 上传相关工具、k3s二进制包、k3s安装脚本、Nginx测试yaml文件到服务器"></a>1. 上传相关工具、k3s二进制包、k3s安装脚本、Nginx测试yaml文件到服务器</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp k3s-selinux-<span class="number">0.2</span>-<span class="number">1.</span>el7_8.noarch.rpm root@xxx.xxx.xxx.xxx:<span class="regexp">/usr/</span>local/src/</span><br><span class="line">scp k3s root@xxx.xxx.xxx.xxx:<span class="regexp">/usr/</span>local/src/</span><br><span class="line">scp k3s.sh root@xxx.xxx.xxx.xxx:<span class="regexp">/usr/</span>local/src/</span><br><span class="line">scp nginx.yaml root@xxx.xxx.xxx.xxx:<span class="regexp">/usr/</span>local/src/</span><br></pre></td></tr></table></figure><h2 id="2-配置k3s二进制包的路径和权限"><a href="#2-配置k3s二进制包的路径和权限" class="headerlink" title="2. 配置k3s二进制包的路径和权限"></a>2. 配置k3s二进制包的路径和权限</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/src/k3s /usr/local/bin/</span><br><span class="line">chmod <span class="number">755</span> /usr/local/bin/k3s</span><br></pre></td></tr></table></figure><h2 id="3-yum安装相关工具"><a href="#3-yum安装相关工具" class="headerlink" title="3. yum安装相关工具"></a>3. yum安装相关工具</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y container-selinux selinux-policy-base</span><br><span class="line">yum install -y /usr/local/src/k3s-selinux-<span class="number">0.2</span>-<span class="number">1.</span>el7_8.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="4-执行k3s安装脚本"><a href="#4-执行k3s安装脚本" class="headerlink" title="4. 执行k3s安装脚本"></a>4. 执行k3s安装脚本</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> INSTALL_K3S_VERSION=v1<span class="number">.21</span><span class="number">.2</span>+k3s1</span><br><span class="line"><span class="keyword">export</span> INSTALL_K3S_SKIP_DOWNLOAD=<span class="literal">true</span></span><br><span class="line"><span class="keyword">export</span> INSTALL_K3S_EXEC=<span class="string">&quot;--write-kubeconfig ~/.kube/config --cluster-cidr  172.16.0.0/12 --service-cidr  172.16.130.0/12&quot;</span></span><br><span class="line">sh /usr/local/src/k3s.sh</span><br></pre></td></tr></table></figure><h2 id="5-检查是否安装成功"><a href="#5-检查是否安装成功" class="headerlink" title="5. 检查是否安装成功"></a>5. 检查是否安装成功</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl status k3s</span><br><span class="line">kubectl get node</span><br><span class="line"># 等待所有服务处于Running或Completed状态</span><br><span class="line">kubectl get pod -A</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60ee34d1538c6.png"></p><h2 id="6-测试nginx服务"><a href="#6-测试nginx服务" class="headerlink" title="6. 测试nginx服务"></a>6. 测试nginx服务</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 创建测试nginx服务</span><br><span class="line">kubectl create -f /usr/local/src/nginx.yaml</span><br><span class="line"># 查看服务是否启动成功，nginx服务处于Running状态的则表明都运行成功</span><br><span class="line">kubectl get pod -A</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60ee358c80d92.png"></p><p>通过浏览器访问：https://[server-ip]:32000</p><h1 id="k3s二进制文件地址"><a href="#k3s二进制文件地址" class="headerlink" title="k3s二进制文件地址"></a>k3s二进制文件地址</h1><p>下载地址：<a href="https://github.com/k3s-io/k3s/releases/download/v1.21.2+k3s1/k3s">https://github.com/k3s-io/k3s/releases/download/v1.21.2+k3s1/k3s</a></p><h1 id="k3s-selinux地址"><a href="#k3s-selinux地址" class="headerlink" title="k3s-selinux地址"></a>k3s-selinux地址</h1><p>下载网址：<a href="https://rpm.rancher.io/k3s/stable/common/centos/7/noarch/k3s-selinux-0.2-1.el7_8.noarch.rpm">https://rpm.rancher.io/k3s/stable/common/centos/7/noarch/k3s-selinux-0.2-1.el7_8.noarch.rpm</a></p><h1 id="k3s-sh文件内容"><a href="#k3s-sh文件内容" class="headerlink" title="k3s.sh文件内容"></a>k3s.sh文件内容</h1><p>下载网址：<a href="https://get.k3s.io/">https://get.k3s.io/</a></p><h1 id="nginx-yaml文件内容"><a href="#nginx-yaml文件内容" class="headerlink" title="nginx.yaml文件内容"></a>nginx.yaml文件内容</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">kind: Namespace</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: test-project</span><br><span class="line">---</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: service-nginx-server</span><br><span class="line">  namespace: test-project</span><br><span class="line">  labels:</span><br><span class="line">    app: service-nginx-server</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - name: tcp-80</span><br><span class="line">      protocol: TCP</span><br><span class="line">      port: 80</span><br><span class="line">      targetPort: 80</span><br><span class="line">      nodePort: 32000</span><br><span class="line">  selector:</span><br><span class="line">    app: nginx-server</span><br><span class="line">  type: NodePort</span><br><span class="line">---</span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: deployment-nginx-server</span><br><span class="line">  namespace: test-project</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx-server</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx-server</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-server</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: container-nginx-server</span><br><span class="line">          image: &#x27;nginx:1.20.1-alpine&#x27;</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 80</span><br><span class="line">              protocol: TCP</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;本文针对版本v1-21-2-k3s1&quot;&gt;&lt;a href=&quot;#本文针对版本v1-21-2-k3s1&quot; class=&quot;headerlink&quot; title=&quot;本文针对版本v1.21.2+k3s1&quot;&gt;&lt;/a&gt;本文针对版本v1.21.2+k3s1&lt;/h1&gt;&lt;h1 id=&quot;官</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="K3S" scheme="http://gaussli.com/categories/tech/container/k3s/"/>
    
    
    <category term="脚本安装" scheme="http://gaussli.com/tags/%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/"/>
    
    <category term="Container" scheme="http://gaussli.com/tags/container/"/>
    
    <category term="K3S" scheme="http://gaussli.com/tags/k3s/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】Kubernetes中openebs数据迁移</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%B8%ADopenebs%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%B8%ADopenebs%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/</id>
    <published>2021-07-26T15:01:24.000Z</published>
    <updated>2021-07-26T15:05:37.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>openebs作为Kubernetes持久层使用的时候，数据只会存在Kubernetes集群中某个节点中，节点间的数据不会自动共享，这也是导致Kubesphere官方说openebs建议不在生产环境下使用的原因。<br>这种情况下，如果某个Node节点从集群中移除后，该Node节点中的数据就需要手动同步到其他节点中。</p><h1 id="现象发现"><a href="#现象发现" class="headerlink" title="现象发现"></a>现象发现</h1><h2 id="1-Node节点移除后，某pod一直处于Pending状态"><a href="#1-Node节点移除后，某pod一直处于Pending状态" class="headerlink" title="1. Node节点移除后，某pod一直处于Pending状态"></a>1. Node节点移除后，某pod一直处于Pending状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -A |grep Pending</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="60ed40e418af3.png"></p><h2 id="2-查看pod的describe信息"><a href="#2-查看pod的describe信息" class="headerlink" title="2. 查看pod的describe信息"></a>2. 查看pod的describe信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe pod [pending-pod-name] -n [pending-pod-namespace]</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="60ed41608e44a.png"><br>结果表明：该POD有Node节点亲和性（affinity）问题。</p><h2 id="3-查看pod的yaml文件内容"><a href="#3-查看pod的yaml文件内容" class="headerlink" title="3. 查看pod的yaml文件内容"></a>3. 查看pod的yaml文件内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod [pending-pod-name] -n [pending-pod-namespace] -oyaml</span><br></pre></td></tr></table></figure><p>进一步分析：本身POD是没有进行亲和性（affinity）配置的，那么和POD有关的额外资源，就是持久层资源（pvc、pv）</p><h2 id="4-查看对应持久层资源（pvc、pv）"><a href="#4-查看对应持久层资源（pvc、pv）" class="headerlink" title="4. 查看对应持久层资源（pvc、pv）"></a>4. 查看对应持久层资源（pvc、pv）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pvc [pvc-name] -n [pending-pod-namespace] -oyaml</span><br><span class="line">kubectl get pv [pv-name] -oyaml</span><br></pre></td></tr></table></figure><h2 id="5-最后能发现，openebs的pv是需要指定Node节点亲和性的"><a href="#5-最后能发现，openebs的pv是需要指定Node节点亲和性的" class="headerlink" title="5. 最后能发现，openebs的pv是需要指定Node节点亲和性的"></a>5. 最后能发现，openebs的pv是需要指定Node节点亲和性的</h2><p>而如果对应的Node节点被移除了，那么自然这个pv肯定是运行失败了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 例子</span><br><span class="line">nodeAffinity:</span><br><span class="line">    required:</span><br><span class="line">      nodeSelectorTerms:</span><br><span class="line">      - matchExpressions:</span><br><span class="line">        - key: kubernetes.io/hostname</span><br><span class="line">          operator: In</span><br><span class="line">          values:</span><br><span class="line">          - k8s-node3</span><br></pre></td></tr></table></figure><h1 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h1><p>问题找到了，那么就有了解决思路：</p><ol><li>把已移除节点中旧PV已存储的数据内容迁移到集群中尚存在的的某节点对应目录上</li><li>保存PVC、PV的yaml文件</li><li>删除掉PVC和PV</li><li>修改PV的节点亲和性</li><li>重新部署PVC和PV</li></ol><h1 id="解决流程"><a href="#解决流程" class="headerlink" title="解决流程"></a>解决流程</h1><h2 id="把已移除节点中旧PV已存储的数据（目录-var-openebs-local-）迁移到Master节点上（目录：-var-openebs-local-）"><a href="#把已移除节点中旧PV已存储的数据（目录-var-openebs-local-）迁移到Master节点上（目录：-var-openebs-local-）" class="headerlink" title="把已移除节点中旧PV已存储的数据（目录/var/openebs/local/）迁移到Master节点上（目录：/var/openebs/local/）"></a>把已移除节点中旧PV已存储的数据（目录/var/openebs/local/）迁移到Master节点上（目录：/var/openebs/local/）</h2><p>过程略</p><h2 id="保存PVC、PV的yaml文件"><a href="#保存PVC、PV的yaml文件" class="headerlink" title="保存PVC、PV的yaml文件"></a>保存PVC、PV的yaml文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get -n [namespace] pvc [pvc-name] -oyaml &gt; pvc.yaml</span><br><span class="line">kubectl get -n [namespace] pv [pv-name] -oyaml &gt; pv.yaml</span><br></pre></td></tr></table></figure><h2 id="删除PVC和PV"><a href="#删除PVC和PV" class="headerlink" title="删除PVC和PV"></a>删除PVC和PV</h2><p>默认情况下，PVC和PV被正在使用是不能直接删除的，删除会一直使PV处于Terminating状态，所以先给PVC加一个元数据，载进行删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl patch -n [namespace] pvc [pvc-name] -p <span class="string">&#x27;&#123;&quot;metadata&quot;:&#123;&quot;finalizers&quot;:null&#125;&#125;&#x27;</span></span><br><span class="line">kubectl delete -n [namespace] pvc [pvc-name]</span><br><span class="line">kubectl delete -n [namespace] pv [pv-name]</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="60ed50ef5ea20.png"></p><h2 id="修改PV的节点亲和性和删掉和PVC的关联信息"><a href="#修改PV的节点亲和性和删掉和PVC的关联信息" class="headerlink" title="修改PV的节点亲和性和删掉和PVC的关联信息"></a>修改PV的节点亲和性和删掉和PVC的关联信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改pv.yaml</span></span><br><span class="line">vi pv.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除以下内容</span></span><br><span class="line"><span class="comment">#claimRef:</span></span><br><span class="line"><span class="comment">#    apiVersion: v1</span></span><br><span class="line"><span class="comment">#    kind: PersistentVolumeClaim</span></span><br><span class="line"><span class="comment">#    name: data-elasticsearch-logging-data-0</span></span><br><span class="line"><span class="comment">#    namespace: kubesphere-logging-system</span></span><br><span class="line"><span class="comment">#    resourceVersion: &quot;13881&quot;</span></span><br><span class="line"><span class="comment">#    uid: f15f1581-f8ae-452b-9825-c28c1cf34f7b</span></span><br><span class="line">nodeAffinity:</span><br><span class="line">    required:</span><br><span class="line">      nodeSelectorTerms:</span><br><span class="line">      - matchExpressions:</span><br><span class="line">        - key: kubernetes.io/hostname</span><br><span class="line">          operator: In</span><br><span class="line">          values:</span><br><span class="line">          <span class="comment"># 修改以下内容</span></span><br><span class="line">          <span class="comment"># k8s-node3改成k8s-master1，改成集群中存在可用的节点名称</span></span><br><span class="line">          - k8s-master1</span><br></pre></td></tr></table></figure><h2 id="重新部署PVC和PV"><a href="#重新部署PVC和PV" class="headerlink" title="重新部署PVC和PV"></a>重新部署PVC和PV</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f pv.yaml</span><br><span class="line">kubectl create -f pvc.yaml</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;openebs作为Kubernetes持久层使用的时候，数据只会存在Kubernetes集群中某个节点中，节点间的数据不会自</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="Kubernetes" scheme="http://gaussli.com/categories/tech/container/kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="Container" scheme="http://gaussli.com/tags/container/"/>
    
    <category term="OpenEBS" scheme="http://gaussli.com/tags/openebs/"/>
    
    <category term="数据迁移" scheme="http://gaussli.com/tags/%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】Kubernetes证书过期问题处理</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</id>
    <published>2021-07-26T14:57:33.000Z</published>
    <updated>2021-07-26T15:01:13.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>Kubernetes稳定运行了一年，突然Kubesphere中任何和K8S资源相关的操作都失效了，而且发现kubectl命令也出错了，报错如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Unable to connect to the server: x509: certificate has expired or is not yet valid</span><br><span class="line">openssl x509 -in /etc/kubernetes/pki/apiserver.crt -noout -text |grep &#x27; Not &#x27;</span><br></pre></td></tr></table></figure><p>原因是Kubernetes的证书默认过期有效期为1年，查看证书有效期命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm alpha certs check-expiration</span><br></pre></td></tr></table></figure><p>查看结果例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[check-expiration] Reading configuration from the cluster...</span><br><span class="line">[check-expiration] FYI: You can look at this config file with &#x27;kubectl -n kube-system get cm kubeadm-config -oyaml&#x27;</span><br><span class="line"></span><br><span class="line">CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED</span><br><span class="line">admin.conf                 Jul 08, 2022 01:40 UTC   364d                                    no      </span><br><span class="line">apiserver                  Jul 08, 2022 01:40 UTC   364d            ca                      no      </span><br><span class="line">apiserver-etcd-client      Jul 08, 2022 01:40 UTC   364d            etcd-ca                 no      </span><br><span class="line">apiserver-kubelet-client   Jul 08, 2022 01:40 UTC   364d            ca                      no      </span><br><span class="line">controller-manager.conf    Jul 08, 2022 01:40 UTC   364d                                    no      </span><br><span class="line">etcd-healthcheck-client    Jul 08, 2022 01:40 UTC   364d            etcd-ca                 no      </span><br><span class="line">etcd-peer                  Jul 08, 2022 01:40 UTC   364d            etcd-ca                 no      </span><br><span class="line">etcd-server                Jul 08, 2022 01:40 UTC   364d            etcd-ca                 no      </span><br><span class="line">front-proxy-client         Jul 08, 2022 01:40 UTC   364d            front-proxy-ca          no      </span><br><span class="line">scheduler.conf             Jul 08, 2022 01:40 UTC   364d                                    no      </span><br><span class="line"></span><br><span class="line">CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED</span><br><span class="line">ca                      Jul 05, 2030 08:16 UTC   8y              no      </span><br><span class="line">etcd-ca                 Jul 05, 2030 08:16 UTC   8y              no      </span><br><span class="line">front-proxy-ca          Jul 05, 2030 08:16 UTC   8y              no</span><br></pre></td></tr></table></figure><h1 id="解决方案（更新证书有效期）"><a href="#解决方案（更新证书有效期）" class="headerlink" title="解决方案（更新证书有效期）"></a>解决方案（更新证书有效期）</h1><h2 id="1-备份证书"><a href="#1-备份证书" class="headerlink" title="1. 备份证书"></a>1. 备份证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rp /etc/kubernetes /etc/kubernetes.bak.[date]</span><br></pre></td></tr></table></figure><h2 id="2-更新所有证书"><a href="#2-更新所有证书" class="headerlink" title="2. 更新所有证书"></a>2. 更新所有证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm alpha certs renew all</span><br></pre></td></tr></table></figure><p><img src="60ed3268f3349.png"></p><h2 id="3-复制admin-conf到-kube-config，kubectl需要用到该文件"><a href="#3-复制admin-conf到-kube-config，kubectl需要用到该文件" class="headerlink" title="3. 复制admin.conf到~/.kube/config，kubectl需要用到该文件"></a>3. 复制admin.conf到~/.kube/config，kubectl需要用到该文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -rp ~/.kube ~/.kube.bak.[date]</span><br><span class="line">cp /etc/kubernetes/admin.conf ~/.kube/config</span><br></pre></td></tr></table></figure><p><img src="60ed3346327db.png"></p><h2 id="4-重启kube-apiserver、kube-controller-manager、kube-scheduler和etcd服务或直接重启docker"><a href="#4-重启kube-apiserver、kube-controller-manager、kube-scheduler和etcd服务或直接重启docker" class="headerlink" title="4. 重启kube-apiserver、kube-controller-manager、kube-scheduler和etcd服务或直接重启docker"></a>4. 重启kube-apiserver、kube-controller-manager、kube-scheduler和etcd服务或直接重启docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;Kubernetes稳定运行了一年，突然Kubesphere中任何和K8S资源相关的操作都失效了，而且发现kubectl命令</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="Kubernetes" scheme="http://gaussli.com/categories/tech/container/kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="Container" scheme="http://gaussli.com/tags/container/"/>
    
    <category term="证书过期" scheme="http://gaussli.com/tags/%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】Kubernetes优雅新增或移除节点</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BC%98%E9%9B%85%E6%96%B0%E5%A2%9E%E6%88%96%E7%A7%BB%E9%99%A4%E8%8A%82%E7%82%B9/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E4%BC%98%E9%9B%85%E6%96%B0%E5%A2%9E%E6%88%96%E7%A7%BB%E9%99%A4%E8%8A%82%E7%82%B9/</id>
    <published>2021-07-26T14:41:18.000Z</published>
    <updated>2021-07-26T14:44:57.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新增节点"><a href="#新增节点" class="headerlink" title="新增节点"></a>新增节点</h1><h3 id="1-集群内所有节点的hosts文件加上新节点解析"><a href="#1-集群内所有节点的hosts文件加上新节点解析" class="headerlink" title="1. 集群内所有节点的hosts文件加上新节点解析"></a>1. 集群内所有节点的hosts文件加上新节点解析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入hosts文件编辑</span></span><br><span class="line">vi /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在文件中加入下面内容</span></span><br><span class="line">[new-node-ip] [new-node-hostname]</span><br></pre></td></tr></table></figure><h3 id="2-进入Master节点，查看当前是否存在可用Token，没有任何输出说明当前没有可用Token"><a href="#2-进入Master节点，查看当前是否存在可用Token，没有任何输出说明当前没有可用Token" class="headerlink" title="2. 进入Master节点，查看当前是否存在可用Token，没有任何输出说明当前没有可用Token"></a>2. 进入Master节点，查看当前是否存在可用Token，没有任何输出说明当前没有可用Token</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token list</span><br></pre></td></tr></table></figure><h3 id="3-创建Token"><a href="#3-创建Token" class="headerlink" title="3. 创建Token"></a>3. 创建Token</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token create</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60ece116f174c.png"></p><h3 id="4-再次查看可用Token，可查看Token的一些信息"><a href="#4-再次查看可用Token，可查看Token的一些信息" class="headerlink" title="4. 再次查看可用Token，可查看Token的一些信息"></a>4. 再次查看可用Token，可查看Token的一些信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token list</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60ece15c8dbae.png"></p><h3 id="5-根据ca的公钥证书数据计算出hash值"><a href="#5-根据ca的公钥证书数据计算出hash值" class="headerlink" title="5. 根据ca的公钥证书数据计算出hash值"></a>5. 根据ca的公钥证书数据计算出hash值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in /etc/kubernetes/pki/ca.crt -noout -pubkey | openssl rsa -pubin -outform DER 2&gt;/dev/null | sha256sum | cut -d&#x27; &#x27; -f1</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60ece296c990b.png"></p><h3 id="6-新节点安装kubectl、kubeadm、kubelet，版本需和Master的一致"><a href="#6-新节点安装kubectl、kubeadm、kubelet，版本需和Master的一致" class="headerlink" title="6. 新节点安装kubectl、kubeadm、kubelet，版本需和Master的一致"></a>6. 新节点安装kubectl、kubeadm、kubelet，版本需和Master的一致</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install kubelet-1.17.3 kubeadm-1.17.3 kubectl-1.17.3</span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line">systemctl start kubelet</span><br></pre></td></tr></table></figure><h3 id="7-把新节点加入到集群中，其中使用到上述获取的Token和ca证书的hash值"><a href="#7-把新节点加入到集群中，其中使用到上述获取的Token和ca证书的hash值" class="headerlink" title="7. 把新节点加入到集群中，其中使用到上述获取的Token和ca证书的hash值"></a>7. 把新节点加入到集群中，其中使用到上述获取的Token和ca证书的hash值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join &lt;master-ip&gt;:6443 --node-name [new-node-hostname] --token kklhin.swv9pvue5jncxzqs --discovery-token-ca-cert-hash sha256:7e0f436144520310a988005261894d4c82c36c99c0db9e71e4daac5546d5f159</span><br></pre></td></tr></table></figure><h1 id="移除节点"><a href="#移除节点" class="headerlink" title="移除节点"></a>移除节点</h1><h3 id="1-进入到Master节点，驱逐待移除节点上的pod"><a href="#1-进入到Master节点，驱逐待移除节点上的pod" class="headerlink" title="1. 进入到Master节点，驱逐待移除节点上的pod"></a>1. 进入到Master节点，驱逐待移除节点上的pod</h3><p>参数说明</p><ul><li>–force<br>当一些pod不是经 ReplicationController, ReplicaSet, Job, DaemonSet 或者 StatefulSet 管理的时候<br>就需要用–force来强制执行 (例如:kube-proxy)</li><li>–ignore-daemonsets<br>无视DaemonSet管理下的Pod</li><li>–delete-local-data<br>如果有mount local volumn的pod，会强制杀掉该pod并把料清除掉<br>另外如果跟本身的配置讯息有冲突时，drain就不会执行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl drain [node-name] --force --ignore-daemonsets --delete-local-data</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="60ecf0f334e65.png"><br><img src="60ecf108e9659.png"></p><h3 id="2-删除节点"><a href="#2-删除节点" class="headerlink" title="2. 删除节点"></a>2. 删除节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete node [node-name]</span><br></pre></td></tr></table></figure><p><img src="60ecf1777808b.png"></p><h3 id="3-进入待删除节点，重置节点"><a href="#3-进入待删除节点，重置节点" class="headerlink" title="3. 进入待删除节点，重置节点"></a>3. 进入待删除节点，重置节点</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm reset</span><br></pre></td></tr></table></figure><h3 id="4-（可选）移除待删除节点的Kubernetes网络配置"><a href="#4-（可选）移除待删除节点的Kubernetes网络配置" class="headerlink" title="4. （可选）移除待删除节点的Kubernetes网络配置"></a>4. （可选）移除待删除节点的Kubernetes网络配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看网络配置</span><br><span class="line">ip a</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="60ee322e1ce39.png"><br>发现有两个Kubernetes的网络配置（flannel.1和cni0）是已无用网络配置，对其进行下线及删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ifconfig cni0 down</span><br><span class="line">ifconfig flannel.1 down</span><br><span class="line">ip link delete cni0</span><br><span class="line">ip link delete flannel.1</span><br><span class="line">ip a</span><br></pre></td></tr></table></figure><p>结果截图<br><img src="60ee32666c273.png"></p><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;新增节点&quot;&gt;&lt;a href=&quot;#新增节点&quot; class=&quot;headerlink&quot; title=&quot;新增节点&quot;&gt;&lt;/a&gt;新增节点&lt;/h1&gt;&lt;h3 id=&quot;1-集群内所有节点的hosts文件加上新节点解析&quot;&gt;&lt;a href=&quot;#1-集群内所有节点的hosts文件加上新节</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="Kubernetes" scheme="http://gaussli.com/categories/tech/container/kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="Container" scheme="http://gaussli.com/tags/container/"/>
    
    <category term="Node" scheme="http://gaussli.com/tags/node/"/>
    
    <category term="优雅" scheme="http://gaussli.com/tags/%E4%BC%98%E9%9B%85/"/>
    
    <category term="节点" scheme="http://gaussli.com/tags/%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】Kubesphere部署</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubesphere%E9%83%A8%E7%BD%B2/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubesphere%E9%83%A8%E7%BD%B2/</id>
    <published>2021-07-26T14:39:44.000Z</published>
    <updated>2021-07-26T14:41:07.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>github：<a href="https://github.com/kubesphere/kubesphere">https://github.com/kubesphere/kubesphere</a></p><p>official-website：<a href="https://kubesphere.io/">https://kubesphere.io/</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：KubeSphere is a distributed operating system for cloud-native application management, using Kubernetes as its kernel. It provides a plug-and-play architecture, allowing third-party applications to be seamlessly integrated into its ecosystem.</p></blockquote><blockquote><p>官方说明：KubeSphere 愿景是打造一个以 Kubernetes 为内核的云原生分布式操作系统，它的架构可以非常方便地使第三方应用与云原生生态组件进行即插即用（plug-and-play）的集成，支持云原生应用在多云与多集群的统一分发和运维管理。</p></blockquote><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li>如需在 Kubernetes 上安装 KubeSphere v3.1.1，您的 Kubernetes 版本必须为：1.17.x、1.18.x、1.19.x 或 1.20.x。</li><li>确保您的机器满足最低硬件要求：CPU &gt; 1 核，内存 &gt; 2 GB。</li><li>在安装之前，需要配置 Kubernetes 集群中的默认存储类型。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl patch storageclass &lt;storageclass-name&gt; -p <span class="string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载部署YAML文件</span></span><br><span class="line">curl -o /usr/<span class="built_in">local</span>/src/kubesphere-installer.yaml https://github.com/kubesphere/ks-installer/releases/download/v3.1.1/kubesphere-installer.yaml</span><br><span class="line">curl -o /usr/<span class="built_in">local</span>/src/cluster-configuration.yaml https://github.com/kubesphere/ks-installer/releases/download/v3.1.1/cluster-configuration.yaml</span><br><span class="line"><span class="comment"># 执行YAML文件</span></span><br><span class="line">kubectl -f /usr/<span class="built_in">local</span>/src/kubesphere-installer.yaml</span><br><span class="line">kubectl -f /usr/<span class="built_in">local</span>/src/cluster-configuration.yaml</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f801626b8ae.png"></p><h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 下载卸载脚本</span><br><span class="line">curl -o /usr/local/src/kubesphere-delete.sh https://raw.githubusercontent.com/kubesphere/ks-installer/release-3.1/scripts/kubesphere-delete.sh</span><br><span class="line"># Master节点执行脚本</span><br><span class="line">sh /usr/local/src/kubesphere-delete.sh</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;github：&lt;a href=&quot;https://github.com/kubesphere/kubesphere&quot;&gt;https://gith</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="Kubesphere" scheme="http://gaussli.com/categories/tech/container/kubesphere/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="Container" scheme="http://gaussli.com/tags/container/"/>
    
    <category term="Kubesphere" scheme="http://gaussli.com/tags/kubesphere/"/>
    
    <category term="YAML" scheme="http://gaussli.com/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】OpenEBS部署</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91openebs%E9%83%A8%E7%BD%B2/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91openebs%E9%83%A8%E7%BD%B2/</id>
    <published>2021-07-26T14:37:33.000Z</published>
    <updated>2021-07-26T14:39:35.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>official-website：<a href="https://docs.openebs.io/">https://docs.openebs.io/</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：OpenEBS helps Developers and Platform SREs easily deploy Kubernetes Stateful Workloads that require fast and highly reliable container attached storage.<br>OpenEBS turns any storage available on the Kubernetes worker nodes into local or distributed Kubernetes Persistent Volumes.<br>OpenEBS Local and Distributed volumes are implemented using a collection of OpenEBS Data Engines. OpenEBS Control Plane integrates deeply into Kubernetes and uses Kubernetes to manage the provisioning, scheduling and maintenance of OpenEBS Volumes.<br>OpenEBS supports hyperconverged and disaggregated deployments. OpenEBS is the leading choice for NVMe based storage deployments.</p></blockquote><p><img src="60f78e34c5d20.png"></p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="安装iscsid服务"><a href="#安装iscsid服务" class="headerlink" title="安装iscsid服务"></a>安装iscsid服务</h2><p>官方说明：<a href="https://docs.openebs.io/docs/next/prerequisites.html">https://docs.openebs.io/docs/next/prerequisites.html</a><br>This guide will help you to verify that your Kubernetes worker nodes have the required prerequisites to install OpenEBS and use OpenEBS Volumes to run your Kubernetes Stateful Workloads. In addition, you will learn about how to customize the installer according to your managed Kubernetes provider.<br>OpenEBS provides block volume support through the iSCSI protocol. Therefore, the iSCSI client (initiator) presence on all Kubernetes nodes is required. Choose the platform below to find the steps to verify if the iSCSI client is installed and running or to find the steps to install the iSCSI client.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有节点都需要安装</span></span><br><span class="line">yum install iscsi-initiator-utils -y</span><br><span class="line">systemctl <span class="built_in">enable</span> --now iscsid</span><br><span class="line">cat /etc/iscsi/initiatorname.iscsi</span><br></pre></td></tr></table></figure><h2 id="配置Master节点可被调度"><a href="#配置Master节点可被调度" class="headerlink" title="配置Master节点可被调度"></a>配置Master节点可被调度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes &lt;Master节点名称&gt; node-role.kubernetes.io/master:NoSchedule-</span><br></pre></td></tr></table></figure><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Master节点执行</span></span><br><span class="line">kubectl apply -f https://openebs.github.io/charts/openebs-operator.yaml</span><br></pre></td></tr></table></figure><h1 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看OpenEBS的pod是否都处于Running状态</span></span><br><span class="line">kubectl get pod -n openebs</span><br></pre></td></tr></table></figure><h1 id="（可选）配置默认Storage-Class"><a href="#（可选）配置默认Storage-Class" class="headerlink" title="（可选）配置默认Storage Class"></a>（可选）配置默认Storage Class</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl patch storageclass &lt;storageclass-name&gt; -p <span class="string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载卸载脚本</span></span><br><span class="line">curl -o /usr/<span class="built_in">local</span>/src/openebs-uninstall.sh https://raw.githubusercontent.com/openebs/charts/gh-pages/scripts/uninstall/uninstall.sh</span><br><span class="line"><span class="comment"># Master节点中执行卸载脚本</span></span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;official-website：&lt;a href=&quot;https://docs.openebs.io/&quot;&gt;https://docs.opene</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="OpenEBS" scheme="http://gaussli.com/categories/tech/container/openebs/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="OpenEBS" scheme="http://gaussli.com/tags/openebs/"/>
    
    <category term="YAML" scheme="http://gaussli.com/tags/yaml/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】Kubernetes部署</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E9%83%A8%E7%BD%B2/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91kubernetes%E9%83%A8%E7%BD%B2/</id>
    <published>2021-07-26T14:26:59.000Z</published>
    <updated>2021-07-26T14:34:43.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>github：<a href="https://github.com/kubernetes/kubernetes">https://github.com/kubernetes/kubernetes</a></p><p>official-website：<a href="https://kubernetes.io/">https://kubernetes.io/</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：Kubernetes 是用于自动部署，扩展和管理容器化应用程序的开源系统。</p></blockquote><blockquote><p>官方说明：Kubernetes, also known as K8s, is an open source system for managing containerized applications across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications.</p></blockquote><blockquote><p>Kubernetes builds upon a decade and a half of experience at Google running production workloads at scale using a system called Borg, combined with best-of-breed ideas and practices from the community.</p></blockquote><blockquote><p>Kubernetes is hosted by the Cloud Native Computing Foundation (CNCF). If your company wants to help shape the evolution of technologies that are container-packaged, dynamically scheduled, and microservices-oriented, consider joining the CNCF. For details about who’s involved and how Kubernetes plays a role, read the CNCF announcement.</p></blockquote><h1 id="Kubeadm方式部署"><a href="#Kubeadm方式部署" class="headerlink" title="Kubeadm方式部署"></a>Kubeadm方式部署</h1><h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h2><h3 id="a-禁用swap虚拟内存"><a href="#a-禁用swap虚拟内存" class="headerlink" title="a) 禁用swap虚拟内存"></a>a) 禁用swap虚拟内存</h3><p>原因：<a href="https://github.com/kubernetes/kubernetes/issues/53533">https://github.com/kubernetes/kubernetes/issues/53533</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看默认是否开启swap虚拟内存，swap端不为0则说明开启</span></span><br><span class="line">free -h</span><br><span class="line"><span class="comment"># 临时禁用swap</span></span><br><span class="line">swapoff -a</span><br><span class="line"><span class="comment"># 永久禁用swap，需重启服务生效</span></span><br><span class="line">sed -i <span class="string">&#x27;s/.*swap.*/#&amp;/&#x27;</span> /etc/fstab</span><br><span class="line"><span class="comment"># 再次查看swap是否已关闭</span></span><br><span class="line">free -h</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f5603a8d7b8.png"></p><h3 id="b-禁用selinux"><a href="#b-禁用selinux" class="headerlink" title="b) 禁用selinux"></a>b) 禁用selinux</h3><p>原因：（<a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a>）<br>Setting SELinux in permissive mode by runningsetenforce 0andsed …effectively disables it. This is required to allow containers to access the host filesystem, which is needed by pod networks for example. You have to do this until SELinux support is improved in the kubelet.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看默认是否已关闭</span></span><br><span class="line">getenforce</span><br><span class="line"><span class="comment"># 临时禁用</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment"># 永久禁用，需重启服务器生效</span></span><br><span class="line">sed -i <span class="string">&quot;s/^SELINUX=.*/SELINUX=disabled/g&quot;</span> /etc/selinux/config</span><br><span class="line"><span class="comment"># 再次查看是否已关闭</span></span><br><span class="line">getenforce</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f56165918ed.png"></p><h3 id="c-禁用防火墙（firewall）"><a href="#c-禁用防火墙（firewall）" class="headerlink" title="c) 禁用防火墙（firewall）"></a>c) 禁用防火墙（firewall）</h3><p>原因：（<a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a>）<br>Theiptablestooling can act as a compatibility layer, behaving like iptables but actually configuring nftables. This nftables backend is not compatible with the current kubeadm packages: it causes duplicated firewall rules and breakskube-proxy.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f562251fd0a.png"></p><h3 id="d-允许-iptables-检查桥接流量"><a href="#d-允许-iptables-检查桥接流量" class="headerlink" title="d) 允许 iptables 检查桥接流量"></a>d) 允许 iptables 检查桥接流量</h3><p>说明：（<a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a>）<br>Make sure that the br_netfilter module is loaded. This can be done by running lsmod | grep br_netfilter. To load it explicitly call sudo modprobe br_netfilter.<br>As a requirement for your Linux Node’s iptables to correctly see bridged traffic, you should ensure net.bridge.bridge-nf-call-iptables is set to 1 in your sysctl config, e.g.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;<span class="string">EOF | sudo tee /etc/modules-load.d/k8s.conf</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt;<span class="string">EOF | sudo tee /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f686d84ee5a.png"></p><h3 id="e-安装Docker"><a href="#e-安装Docker" class="headerlink" title="e) 安装Docker"></a>e) 安装Docker</h3><p>略</p><h3 id="f-配置Docker的Cgroup驱动程序"><a href="#f-配置Docker的Cgroup驱动程序" class="headerlink" title="f) 配置Docker的Cgroup驱动程序"></a>f) 配置Docker的Cgroup驱动程序</h3><p>说明：<a href="https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker">https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#docker</a><br>Docker中默认的Cgroup驱动程序为cgroupfs，和Kubelet默认的systemd不一致，将会导致Kubelet安装时报错，所以修改Docker的Cgroup驱动程序为systemd。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>添加以下内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f687d1ea823.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启Docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="g-配置Kubernetes的YUM源"><a href="#g-配置Kubernetes的YUM源" class="headerlink" title="g) 配置Kubernetes的YUM源"></a>g) 配置Kubernetes的YUM源</h3><p>YUM默认源是没有Kubernetes相关组件的软件的（Kubeadm、Kubectl、Kubelet），所以需要配置Kubernetes的YUM源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=1</span></span><br><span class="line"><span class="string">repo_gpgcheck=1</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure><h3 id="h-查看可安装的Kuberadm、Kubelet、Kubectl版本"><a href="#h-查看可安装的Kuberadm、Kubelet、Kubectl版本" class="headerlink" title="h) 查看可安装的Kuberadm、Kubelet、Kubectl版本"></a>h) 查看可安装的Kuberadm、Kubelet、Kubectl版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list kubeadm --showduplicates</span><br></pre></td></tr></table></figure><h2 id="2-所有节点安装Kubeadm、Kubelet、Kubectl"><a href="#2-所有节点安装Kubeadm、Kubelet、Kubectl" class="headerlink" title="2. 所有节点安装Kubeadm、Kubelet、Kubectl"></a>2. 所有节点安装Kubeadm、Kubelet、Kubectl</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 安装最新版本</span><br><span class="line"># yum install -y kubeadm kubelet kubectl</span><br><span class="line"># 安装指定指定版本</span><br><span class="line">yum install -y kubeadm-1.20.9 kubelet-1.20.9 kubectl-1.20.9</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f68be076459.png"></p><h2 id="3-所有节点配置开启自启动及服务启动"><a href="#3-所有节点配置开启自启动及服务启动" class="headerlink" title="3. 所有节点配置开启自启动及服务启动"></a>3. 所有节点配置开启自启动及服务启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line">systemctl start kubelet</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f68c317176f.png"></p><h2 id="3-Master节点初始化"><a href="#3-Master节点初始化" class="headerlink" title="3. Master节点初始化"></a>3. Master节点初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --apiserver-advertise-address=192.168.10.8 \</span><br><span class="line">--apiserver-bind-port=6443 \</span><br><span class="line">--image-repository=google_containers \</span><br><span class="line">--kubernetes-version=v1.20.9 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">--service-cidr=10.96.0.0/12</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f68e2d43fc6.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 按照提示复制对应配置文件</span><br><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><h2 id="4-Work节点初始化"><a href="#4-Work节点初始化" class="headerlink" title="4. Work节点初始化"></a>4. Work节点初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.10.8:6443 \</span><br><span class="line">--token rbmgap.cdmqe0c25613a8yr \</span><br><span class="line">--discovery-token-ca-cert-hash sha256:b1dacd2a9ec2205aa80ad09f80e8a44eee43f6527aa2ea5745e405bb1c5ca2bd</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f6990796311.png"></p><h2 id="5-Master查看节点信息"><a href="#5-Master查看节点信息" class="headerlink" title="5. Master查看节点信息"></a>5. Master查看节点信息</h2><p>集群节点当前处于NotReady状态，原因是coredns服务还没启动成功，而coredns服务依赖Kubernetes集群中的网络插件，常用的网络插件为Flannel、Calico。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node -owide</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f69b05478ca.png"></p><h2 id="6-Master节点配置网络插件（Flannel）"><a href="#6-Master节点配置网络插件（Flannel）" class="headerlink" title="6. Master节点配置网络插件（Flannel）"></a>6. Master节点配置网络插件（Flannel）</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>官方地址：<a href="https://github.com/flannel-io/flannel">https://github.com/flannel-io/flannel</a><br>网络插件只需要安装一个即可，即安装了Flannel就不需要安装Calico了。</p><h3 id="下载并修改服务配置"><a href="#下载并修改服务配置" class="headerlink" title="下载并修改服务配置"></a>下载并修改服务配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载Flannel部署YAML文件</span></span><br><span class="line">curl -o /usr/<span class="built_in">local</span>/src/kube-flannel.yaml https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"><span class="comment"># 修改部分属性</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/src/kube-flannel.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 修改其中的net-conf.json中的Network属性，改为初始化命令中的pod-network-cidr参数</span><br><span class="line">&quot;Network&quot;: &quot;10.244.0.0/16&quot;,</span><br><span class="line"># （若存在多网卡）新增指定网卡属性</span><br><span class="line">args:</span><br><span class="line">  - --ip-masq</span><br><span class="line">  - --kube-subnet-mgr</span><br><span class="line">  - --iface=enp0s8</span><br></pre></td></tr></table></figure><h3 id="部署服务"><a href="#部署服务" class="headerlink" title="部署服务"></a>部署服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署网络插件Flannel服务</span></span><br><span class="line">kubectl create -f /usr/<span class="built_in">local</span>/src/kube-flannel.yaml</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f69a2c9e3c8.png"></p><h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定时查看Kubernetes集群中pod运行状态，若全部处于Running状态则表明网络插件Flannel部署成功了</span></span><br><span class="line">watch -n 1 <span class="string">&quot;kubectl get pod -A&quot;</span></span><br><span class="line"><span class="comment"># 再次查看节点状态，若都处于Ready状态则表明网络插件Flannel配置成功了</span></span><br><span class="line">kubectl get node -owide</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f69aa15218d.png"></p><p><img src="60f69b205cacc.png"></p><h2 id="7-Master节点配置网络插件（Calico）"><a href="#7-Master节点配置网络插件（Calico）" class="headerlink" title="7. Master节点配置网络插件（Calico）"></a>7. Master节点配置网络插件（Calico）</h2><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><p>官方地址：<a href="https://www.tigera.io/project-calico/">https://www.tigera.io/project-calico/</a><br>网络插件只需要安装一个即可，即安装了Calico就不需要安装Flannel了。</p><h3 id="下载并修改服务配置-1"><a href="#下载并修改服务配置-1" class="headerlink" title="下载并修改服务配置"></a>下载并修改服务配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载calico部署YAML文件</span></span><br><span class="line">curl -o /usr/<span class="built_in">local</span>/src/tigera-operator.yaml https://docs.projectcalico.org/manifests/tigera-operator.yaml</span><br><span class="line">curl -o /usr/<span class="built_in">local</span>/src/custom-resources.yaml https://docs.projectcalico.org/manifests/custom-resources.yaml</span><br><span class="line"><span class="comment"># 修改部分属性</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/src/custom-resources.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改其中的cidr属性，改为初始化命令中的pod-network-cidr参数</span><br><span class="line">cidr: 10.244.0.0/16</span><br></pre></td></tr></table></figure><h3 id="部署服务-1"><a href="#部署服务-1" class="headerlink" title="部署服务"></a>部署服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署网络插件Calico服务</span></span><br><span class="line">kubectl create -f /usr/<span class="built_in">local</span>/src/tigera-operator.yaml</span><br><span class="line">kubectl create -f /usr/<span class="built_in">local</span>/src/custom-resources.yaml</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f6a3775549e.png"></p><h3 id="查看结果-1"><a href="#查看结果-1" class="headerlink" title="查看结果"></a>查看结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定时查看Kubernetes集群中pod运行状态，若全部处于Running状态则表明网络插件Calico部署成功了</span></span><br><span class="line">watch -n 1 <span class="string">&quot;kubectl get pod -A&quot;</span></span><br><span class="line"><span class="comment"># 再次查看节点状态，若都处于Ready状态则表明网络插件Calico配置成功了</span></span><br><span class="line">kubectl get node -owide</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f6a3d8863c2.png"></p><p><img src="60f69b205cacc.png"></p><h2 id="8-Master节点配置网络插件（Calico）-方式2"><a href="#8-Master节点配置网络插件（Calico）-方式2" class="headerlink" title="8. Master节点配置网络插件（Calico）(方式2)"></a>8. Master节点配置网络插件（Calico）(方式2)</h2><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><p>官方地址：<a href="https://www.tigera.io/project-calico/">https://www.tigera.io/project-calico/</a><br>网络插件只需要安装一个即可，即安装了Calico就不需要安装Flannel了。<br>此方式关键在于直接使用一个配置文件即可</p><h3 id="下载并修改服务配置-2"><a href="#下载并修改服务配置-2" class="headerlink" title="下载并修改服务配置"></a>下载并修改服务配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载Calico部署YAML文件</span></span><br><span class="line">curl -o /usr/<span class="built_in">local</span>/src/calico.yaml https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line"><span class="comment"># 修改部分属性</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/src/calico.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 修改其中的CALICO_IPV4POOL_CIDR环境变量（默认是被注释的了），改为初始化命令中的pod-network-cidr参数</span><br><span class="line">- name: CALICO_IPV4POOL_CIDR</span><br><span class="line">  value: &quot;10.244.0.0/16&quot;</span><br></pre></td></tr></table></figure><h3 id="部署服务-2"><a href="#部署服务-2" class="headerlink" title="部署服务"></a>部署服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署网络插件Calico服务</span></span><br><span class="line">kubectl create -f /usr/<span class="built_in">local</span>/src/calico.yaml</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f6a586c9868.png"></p><h3 id="查看结果-2"><a href="#查看结果-2" class="headerlink" title="查看结果"></a>查看结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定时查看Kubernetes集群中pod运行状态，若全部处于Running状态则表明网络插件Calico部署成功了</span></span><br><span class="line">watch -n 1 <span class="string">&quot;kubectl get pod -A&quot;</span></span><br><span class="line"><span class="comment"># 再次查看节点状态，若都处于Ready状态则表明网络插件Calico配置成功了</span></span><br><span class="line">kubectl get node -owide</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f6a59e842ec.png"></p><p><img src="60f69b205cacc.png"></p><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;github：&lt;a href=&quot;https://github.com/kubernetes/kubernetes&quot;&gt;https://gith</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="Kubernetes" scheme="http://gaussli.com/categories/tech/container/kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="Container" scheme="http://gaussli.com/tags/container/"/>
    
    <category term="Kubeadm" scheme="http://gaussli.com/tags/kubeadm/"/>
    
    <category term="Kubelet" scheme="http://gaussli.com/tags/kubelet/"/>
    
    <category term="Kubectl" scheme="http://gaussli.com/tags/kubectl/"/>
    
  </entry>
  
  <entry>
    <title>【容器化】Docker部署</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91docker%E9%83%A8%E7%BD%B2/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90%E5%AE%B9%E5%99%A8%E5%8C%96%E3%80%91docker%E9%83%A8%E7%BD%B2/</id>
    <published>2021-07-26T14:23:36.000Z</published>
    <updated>2021-07-26T14:27:34.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>official-website：<a href="https://www.docker.com/">https://www.docker.com/</a></p><p>中文教程：<a href="https://www.runoob.com/docker/docker-tutorial.html">https://www.runoob.com/docker/docker-tutorial.html</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production.</p></blockquote><h1 id="YUM方式部署"><a href="#YUM方式部署" class="headerlink" title="YUM方式部署"></a>YUM方式部署</h1><h3 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h3><h5 id="配置Docker-CE的YUM源"><a href="#配置Docker-CE的YUM源" class="headerlink" title="配置Docker-CE的YUM源"></a>配置Docker-CE的YUM源</h5><p>YUM默认源中的Docker是比较旧的，如果需要安装新版本的Docker，需要配置Docker-CE的YUM源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f67aa657f0b.png"></p><h5 id="查看可安装的Docker版本"><a href="#查看可安装的Docker版本" class="headerlink" title="查看可安装的Docker版本"></a>查看可安装的Docker版本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f67b6c61696.png"></p><h3 id="2-安装部署"><a href="#2-安装部署" class="headerlink" title="2. 安装部署"></a>2. 安装部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装最新版本</span></span><br><span class="line"><span class="comment"># yum install -y docker-ce</span></span><br><span class="line"><span class="comment"># 安装指定指定版本</span></span><br><span class="line">yum install -y docker-ce-3:19.03.15-3.el7.x86_64</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f67e6229ffd.png"></p><h3 id="3-配置开机自启动及服务启动"><a href="#3-配置开机自启动及服务启动" class="headerlink" title="3. 配置开机自启动及服务启动"></a>3. 配置开机自启动及服务启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f67ea72757d.png"></p><h3 id="4-配置私有仓库"><a href="#4-配置私有仓库" class="headerlink" title="4. 配置私有仓库"></a>4. 配置私有仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line"><span class="comment"># 配置Docker私有仓库文件</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">    &quot;http://&lt;IP&gt;:&lt;PORT&gt;&quot;</span></span><br><span class="line"><span class="string">  ],</span></span><br><span class="line"><span class="string">  &quot;insecure-registries&quot;: [</span></span><br><span class="line"><span class="string">    &quot;&lt;IP&gt;:&lt;PORT&gt;&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="comment"># 重启Docker服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="5-测试镜像拉取"><a href="#5-测试镜像拉取" class="headerlink" title="5. 测试镜像拉取"></a>5. 测试镜像拉取</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull busybox</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f685d6208a5.png"></p><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;official-website：&lt;a href=&quot;https://www.docker.com/&quot;&gt;https://www.docker.</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Container" scheme="http://gaussli.com/categories/tech/container/"/>
    
    <category term="Docker" scheme="http://gaussli.com/categories/tech/container/docker/"/>
    
    
    <category term="YUM" scheme="http://gaussli.com/tags/yum/"/>
    
    <category term="Docker" scheme="http://gaussli.com/tags/docker/"/>
    
    <category term="Container" scheme="http://gaussli.com/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>【Middleware】Seata部署及使用</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91seata%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91seata%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-26T14:21:03.000Z</published>
    <updated>2021-07-26T14:22:31.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>github：<a href="https://github.com/seata/seata">https://github.com/seata/seata</a></p><p>github-example：<a href="https://github.com/seata/seata-samples">https://github.com/seata/seata-samples</a></p><p>offical-website：<a href="https://seata.io/">https://seata.io/</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：Seata 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。</p></blockquote><p>PS: Seata是比较难以理解的一个框架，强烈建议在学习Seata框架时，先认真阅读官网内容，以了解整个Seata各种概念和设计思路，再动手写代码。</p><h1 id="脚本方式安装"><a href="#脚本方式安装" class="headerlink" title="脚本方式安装"></a>脚本方式安装</h1><h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h2><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>略</p><h3 id="下载应用包"><a href="#下载应用包" class="headerlink" title="下载应用包"></a>下载应用包</h3><table><thead><tr><th>应用包名称</th><th>下载地址</th></tr></thead><tbody><tr><td>seata-server-1.4.2.tar.gz</td><td><a href="https://github.com/seata/seata/releases/download/v1.4.2/seata-server-1.4.2.tar.gz">https://github.com/seata/seata/releases/download/v1.4.2/seata-server-1.4.2.tar.gz</a></td></tr><tr><td>seata-server.sql</td><td><a href="https://github.com/seata/seata/blob/1.4.2/script/server/db/mysql.sql">https://github.com/seata/seata/blob/1.4.2/script/server/db/mysql.sql</a></td></tr></tbody></table><h3 id="上传应用包"><a href="#上传应用包" class="headerlink" title="上传应用包"></a>上传应用包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp seata-server-1.4.2.tar.gz root@xxx:/usr/<span class="built_in">local</span>/src/</span><br></pre></td></tr></table></figure><h3 id="解压应用包"><a href="#解压应用包" class="headerlink" title="解压应用包"></a>解压应用包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf seata-server-1.4.2.tar.gz</span><br></pre></td></tr></table></figure><h3 id="移动到安装目录（-usr-local-seata）"><a href="#移动到安装目录（-usr-local-seata）" class="headerlink" title="移动到安装目录（/usr/local/seata）"></a>移动到安装目录（/usr/local/seata）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/<span class="built_in">local</span>/src/seata/seata-server-1.4.2/ /usr/<span class="built_in">local</span>/seata-server</span><br></pre></td></tr></table></figure><h2 id="2-创建数据库"><a href="#2-创建数据库" class="headerlink" title="2. 创建数据库"></a>2. 创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># MySQL命令行中</span><br><span class="line"><span class="keyword">create</span> database seata_server_db;</span><br><span class="line">source seata<span class="operator">-</span>server.sql</span><br></pre></td></tr></table></figure><h2 id="3-配置Seata信息"><a href="#3-配置Seata信息" class="headerlink" title="3. 配置Seata信息"></a>3. 配置Seata信息</h2><ul><li>seata支持通过file、nacos、eureka、redis、zk、consul、etcd3、sofa方式注册服务</li><li>seata支持使用file、nacos、apollo、zk、consul、etcd3作为配置中心</li></ul><h3 id="以服务注册方式：file，服务配置方式：file，数据存储方式：file"><a href="#以服务注册方式：file，服务配置方式：file，数据存储方式：file" class="headerlink" title="以服务注册方式：file，服务配置方式：file，数据存储方式：file"></a>以服务注册方式：file，服务配置方式：file，数据存储方式：file</h3><p>不需要改动任何配置文件，当这种方式不可实现高可用部署，高可用部署架构上数据存储方式不能使用file方式。</p><h3 id="以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql"><a href="#以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql" class="headerlink" title="以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql"></a>以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql</h3><ul><li>Apollo中配置Seata属性<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">store.mode = db</span><br><span class="line">## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp)/HikariDataSource(hikari) etc.</span><br><span class="line">store.db.datasource = druid</span><br><span class="line">## mysql/oracle/postgresql/h2/oceanbase etc.</span><br><span class="line">store.db.dbType = mysql</span><br><span class="line">store.db.driverClassName = com.mysql.jdbc.Driver</span><br><span class="line">## if using mysql to store the data, recommend add rewriteBatchedStatements=true in jdbc connection param</span><br><span class="line">store.db.url = jdbc:mysql://xxx:xxx/xxx_db?rewriteBatchedStatements=true&amp;autoReconnect=true&amp;failOverReadOnly=false</span><br><span class="line">store.db.user = xxx</span><br><span class="line">store.db.password = xxxx</span><br><span class="line">store.db.minConn = 5</span><br><span class="line">store.db.maxConn = 30</span><br><span class="line">store.db.globalTable = global_table</span><br><span class="line">store.db.branchTable = branch_table</span><br><span class="line">store.db.lockTable = lock_table</span><br><span class="line">store.db.queryLimit = 100</span><br><span class="line">store.db.maxWait = 5000</span><br></pre></td></tr></table></figure></li><li>配置registry.conf文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改registry.conf</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/seata-server/conf/registry.conf</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 修改registry下的eureka模块</span><br><span class="line">eureka &#123;</span><br><span class="line">    serviceUrl = <span class="attr">&quot;&lt;eureka的服务地址&gt;&quot;</span></span><br><span class="line">    application = <span class="attr">&quot;&lt;seata在eureka中的服务名，建议seata-server&gt;&quot;</span></span><br><span class="line">    weight = <span class="attr">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"># 修改config下的apollo模块</span><br><span class="line">apollo &#123;</span><br><span class="line">    appId = <span class="attr">&quot;&lt;Apollo已配置项目名称&gt;&quot;</span></span><br><span class="line">    ## apolloConfigService will cover apolloMeta</span><br><span class="line">    apolloMeta = <span class="attr">&quot;&lt;Apollo-Meta的服务地址&gt;&quot;</span></span><br><span class="line">    apolloConfigService = <span class="attr">&quot;&lt;Apollo-Config的服务地址，一般和Apollo-Meta服务的一致&gt;&quot;</span></span><br><span class="line">    namespace = <span class="attr">&quot;&lt;Apollo中配置的Seata命名空间&gt;&quot;</span></span><br><span class="line">    apolloAccesskeySecret = <span class="attr">&quot;&lt;若有，则配置&gt;&quot;</span></span><br><span class="line">    cluster = <span class="attr">&quot;&lt;Apollo配置的集群名称&gt;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4. 启动服务"></a>4. 启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &quot;-p&quot;表示指定服务端口</span></span><br><span class="line">nohup sh /usr/<span class="built_in">local</span>/seata-server/bin/seata-server.sh -p &lt;端口号&gt; &gt; /usr/<span class="built_in">local</span>/seata-server/logs/seata-server.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h2 id="5-查看日志"><a href="#5-查看日志" class="headerlink" title="5. 查看日志"></a>5. 查看日志</h2><p>查看文件<code>/usr/local/seata-server/conf/logback/file-appender.xml</code>内容可知，默认的日志路径为<code>$&#123;user.home&#125;/logs/seata</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 或tail -f /usr/local/seata-server/logs/seata-server.log</span></span><br><span class="line">tail -f ~/logs/seata/seata-server.&lt;端口号&gt;.all.log</span><br></pre></td></tr></table></figure><h2 id="6-停止服务"><a href="#6-停止服务" class="headerlink" title="6. 停止服务"></a>6. 停止服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 `ps -aux | grep seata | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br></pre></td></tr></table></figure><h1 id="Kubernetes方式安装"><a href="#Kubernetes方式安装" class="headerlink" title="Kubernetes方式安装"></a>Kubernetes方式安装</h1><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h2><p>和脚本方式安装中的创建数据库步骤一致</p><h2 id="2-部署服务（以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql进行部署）"><a href="#2-部署服务（以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql进行部署）" class="headerlink" title="2. 部署服务（以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql进行部署）"></a>2. 部署服务（以服务注册方式：eureka，服务配置方式：apollo，数据存储方式：mysql进行部署）</h2><p>修改其中<code>&lt;namespace-name&gt;</code>的内容，以及配置文件相关属性。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># configmap for seata-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-seata-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">registry.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    registry &#123;</span></span><br><span class="line"><span class="string">      type = &quot;eureka&quot;</span></span><br><span class="line"><span class="string">      eureka &#123;</span></span><br><span class="line"><span class="string">        serviceUrl = &quot;&lt;eureka的服务地址&gt;&quot;</span></span><br><span class="line"><span class="string">        application = &quot;&lt;seata在eureka中的服务名，建议seata-server&gt;&quot;</span></span><br><span class="line"><span class="string">        weight = &quot;1&quot;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    config &#123;</span></span><br><span class="line"><span class="string">      type = &quot;apollo&quot;</span></span><br><span class="line"><span class="string">      apollo &#123;</span></span><br><span class="line"><span class="string">        appId = &quot;&lt;Apollo已配置项目名称&gt;&quot;</span></span><br><span class="line"><span class="string">        ## apolloConfigService will cover apolloMeta</span></span><br><span class="line"><span class="string">        apolloMeta = &quot;&lt;Apollo-Meta的服务地址&gt;&quot;</span></span><br><span class="line"><span class="string">        apolloConfigService = &quot;&lt;Apollo-Config的服务地址，一般和Apollo-Meta服务的一致&gt;&quot;</span></span><br><span class="line"><span class="string">        namespace = &quot;&lt;Apollo中配置的Seata命名空间&gt;&quot;</span></span><br><span class="line"><span class="string">        cluster = &quot;&lt;Apollo配置的集群名称&gt;&quot;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span><span class="meta">---</span></span><br><span class="line"><span class="comment"># deployment for seata-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-seata-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">seata-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">seata-server</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">seata-server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 存储资源定义</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-seata-server</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">configmap-seata-server</span></span><br><span class="line">            <span class="attr">defaultMode:</span> <span class="number">420</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">container-seata-server</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;seataio/seata-server:latest&#x27;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8091</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="comment"># 环境变量</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SEATA_CONFIG_NAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;file:/root/seata-config/registry&#x27;</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">2000Mi</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">1000Mi</span></span><br><span class="line">          <span class="comment"># 存储资源挂载</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-seata-server</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/root/seata-config</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="SpringBoot中使用"><a href="#SpringBoot中使用" class="headerlink" title="SpringBoot中使用"></a>SpringBoot中使用</h1><h2 id="1-创建undo-log表"><a href="#1-创建undo-log表" class="headerlink" title="1. 创建undo_log表"></a>1. 创建undo_log表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 注意此处0.3.0+ 增加唯一索引 ux_undo_log</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `undo_log` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `branch_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `xid` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `context` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `rollback_info` longblob <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `log_status` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `log_created` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `log_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `ext` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `ux_undo_log` (`xid`,`branch_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><h2 id="2-引入依赖"><a href="#2-引入依赖" class="headerlink" title="2. 引入依赖"></a>2. 引入依赖</h2><p>注意版本强烈建议和部署的服务版本一致</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;seata.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-修改SpringBoot配置文件（application-yml或application-properties）"><a href="#3-修改SpringBoot配置文件（application-yml或application-properties）" class="headerlink" title="3. 修改SpringBoot配置文件（application.yml或application.properties）"></a>3. 修改SpringBoot配置文件（application.yml或application.properties）</h2><h3 id="Seata独立部署方式配置"><a href="#Seata独立部署方式配置" class="headerlink" title="Seata独立部署方式配置"></a>Seata独立部署方式配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">seata.enabled = true</span><br><span class="line">seata.service.grouplist.seata-server = &lt;seata-server的地址（含端口）&gt;</span><br><span class="line">seata.service.vgroup-mapping.tx_service_group_xxx = seata-server</span><br><span class="line">seata.tx-service-group = tx_service_group_xxx</span><br></pre></td></tr></table></figure><h3 id="Seata基于Eureka服务部署方式配置"><a href="#Seata基于Eureka服务部署方式配置" class="headerlink" title="Seata基于Eureka服务部署方式配置"></a>Seata基于Eureka服务部署方式配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">seata.enabled = true</span><br><span class="line">seata.registry.type = eureka</span><br><span class="line">seata.registry.eureka.service-url = &lt;Eureka地址，多个逗号（,）隔开&gt;</span><br><span class="line">seata.service.vgroup-mapping.tx_service_group_xxx = seata-server</span><br><span class="line">seata.tx-service-group = tx_service_group_xxx</span><br></pre></td></tr></table></figure><h2 id="4-与ORM框架整合（配置数据源代理）"><a href="#4-与ORM框架整合（配置数据源代理）" class="headerlink" title="4. 与ORM框架整合（配置数据源代理）"></a>4. 与ORM框架整合（配置数据源代理）</h2><p>seata虽说是和主流的ORM框架都能支持整合，但整合过程还是需要进行一定的配置的，其中最重要的就是数据源代理了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;seata.enabled:false&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isSeataEnabled;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource.druid&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">    DruidDataSource druidDataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    <span class="keyword">return</span> druidDataSource;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="meta">@Bean(&quot;dataSource&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">(DataSource druidDataSource)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isSeataEnabled) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceProxy(druidDataSource);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> druidDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-与RPC框架整合（配置事务传播）"><a href="#5-与RPC框架整合（配置事务传播）" class="headerlink" title="5. 与RPC框架整合（配置事务传播）"></a>5. 与RPC框架整合（配置事务传播）</h2><p>seata的全局事务是基于内部的XID确定全局唯一事务ID的，而下游服务自动默认是从Request-Header中获取的，所以基于不同的RPC框架，有不同的事务传播配置。<br>官网的微服务框架支持 <a href="https://seata.io/zh-cn/docs/user/microservice.html">https://seata.io/zh-cn/docs/user/microservice.html</a> 文章中有具体的说明。<br>当前用的RPC框架为Feign，所以以Feign为例，创建Feign的请求拦截器类，把当前的XID放到请求头里：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(&#123;RequestInterceptor.class, RootContext.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignRequestSeataInterceptor</span> <span class="keyword">implements</span> <span class="title">RequestInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(RequestTemplate template)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 传输Seata的xid到下游服务</span></span><br><span class="line">        String xid = RootContext.getXID();</span><br><span class="line">        <span class="keyword">if</span> (StrUtil.isNotBlank(xid)) &#123;</span><br><span class="line">            template.header(RootContext.KEY_XID, xid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-使用注解-GlobalTransactional启用Seata分布式事务"><a href="#6-使用注解-GlobalTransactional启用Seata分布式事务" class="headerlink" title="6. 使用注解@GlobalTransactional启用Seata分布式事务"></a>6. 使用注解<code>@GlobalTransactional</code>启用Seata分布式事务</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Server</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GlobalTransactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result&lt;String&gt; <span class="title">save</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//<span class="doctag">TODO:</span> 具体业务逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="1-脚本方式单机部署的高可用或多实例"><a href="#1-脚本方式单机部署的高可用或多实例" class="headerlink" title="1. 脚本方式单机部署的高可用或多实例"></a>1. 脚本方式单机部署的高可用或多实例</h2><p>如果想在同一台服务器部署多个实例，不能单单改了端口执行同一条命令启动服务命令，这样会由于部分文件在不同实例下共同使用而出错，这一点已经测试证实过了，至少使用Seata1.2.0和Seata1.3.0版本都测试过。</p><p>所以有多少个实例，就要创建多少个Seata部署文件夹，每个文件夹各自管理各自的实例。如部署例子分别创建<code>/usr/local/seata1/</code>、<code>/usr/local/seata2/</code>、<code>/usr/local/seata3/</code>三个目录，并把seata的解压内容复制到目录内，分别用不同端口执行不同目录下的<code>bin/seata-server.sh</code>脚本，这样才能正确地得到三个seata实例。</p><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;github：&lt;a href=&quot;https://github.com/seata/seata&quot;&gt;https://github.com/sea</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Middleware" scheme="http://gaussli.com/categories/tech/middleware/"/>
    
    <category term="Seata" scheme="http://gaussli.com/categories/tech/middleware/seata/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="Seata" scheme="http://gaussli.com/tags/seata/"/>
    
    <category term="脚本安装" scheme="http://gaussli.com/tags/%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>【Middleware】Zipkin部署及使用</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91zipkin%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91zipkin%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-26T14:18:29.000Z</published>
    <updated>2021-07-26T14:20:18.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-官方链接"><a href="#1-官方链接" class="headerlink" title="1. 官方链接"></a>1. 官方链接</h1><ul><li><p>官方链接<br><a href="https://zipkin.io/">OpenZipkin · A distributed tracing system</a></p></li><li><p>github链接<br><a href="https://github.com/openzipkin/zipkin">openzipkin/zipkin</a></p></li></ul><h1 id="2-一些概念和知识点"><a href="#2-一些概念和知识点" class="headerlink" title="2.一些概念和知识点"></a>2.一些概念和知识点</h1><ul><li><p>数据流转图<br><img src="60e7a8217bc37.png"></p></li><li><p>开源分布式跟踪系统，Twitter公司开源</p></li><li><p>作用</p><ul><li>查看服务调用的大局观，分析服务间调用关系</li><li>分析服务调用耗时</li><li>分析服务调用异常问题</li></ul></li><li><p>四大组件</p><ul><li>collector<br>对链路数据进行验证、存储、建立索引的操作</li><li>storage<br>对数据进行存储，默认情况下使用Cassandra。storage组件被设计成插件化，除了Cassandra外，还支持ElasticSearch和MySQL</li><li>search（Zipkin Query Service）<br>一旦数据被存储以及建立索引，搜索守护进程就能提供一个JSON格式的API来进行链路数据的查找。web UI内部使用的就是这个API</li><li>web UI<br>提供一个友好的用户界面，展示链路数据关联的服务、耗时和注解等信息。特别地，该UI并没有身份验证能力。</li></ul></li><li><p>数据传输方式</p><ul><li>http：默认方式</li><li>RabbitMQ</li><li>Kafka<br>设置spring.zipkin.sender.type: kafka</li></ul></li><li><p>安装方式</p><ul><li>结合springcloud启动zipkin服务，让eureka进行服务发现</li><li>通过docker安装</li><li>通过jar包执行java -jar安装</li><li>源码安装</li></ul></li><li><p>高可用考虑</p><ul><li>通过kubernetes保证至少存在一个副本</li></ul></li></ul><h1 id="3-安装配置，使用MySQL作为存储方式"><a href="#3-安装配置，使用MySQL作为存储方式" class="headerlink" title="3. 安装配置，使用MySQL作为存储方式"></a>3. 安装配置，使用MySQL作为存储方式</h1><ul><li><p>数据库配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Barracuda supports compression (In AWS RDS, this must be assigned in a parameter group)</span></span><br><span class="line">mysql -uroot -e <span class="string">&quot;SET GLOBAL innodb_file_format=Barracuda&quot;</span></span><br><span class="line"><span class="comment"># This command should work even in RDS, and return &quot;Barracuda&quot;</span></span><br><span class="line">mysql -uroot -e <span class="string">&quot;show global variables like &#x27;innodb_file_format&#x27;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>SQL DDL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Copyright 2015-2019 The OpenZipkin Authors</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except</span></span><br><span class="line"><span class="comment">-- in compliance with the License. You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Unless required by applicable law or agreed to in writing, software distributed under the License</span></span><br><span class="line"><span class="comment">-- is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express</span></span><br><span class="line"><span class="comment">-- or implied. See the License for the specific language governing permissions and limitations under</span></span><br><span class="line"><span class="comment">-- the License.</span></span><br><span class="line"><span class="operator">-</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> zipkin_spans (</span><br><span class="line">  `trace_id_high` <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;If non zero, this means the trace uses 128 bit traceIds instead of 64 bit&#x27;</span>,</span><br><span class="line">  `trace_id` <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `id` <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `remote_service_name` <span class="type">VARCHAR</span>(<span class="number">255</span>),</span><br><span class="line">  `parent_id` <span class="type">BIGINT</span>,</span><br><span class="line">  `debug` BIT(<span class="number">1</span>),</span><br><span class="line">  `start_ts` <span class="type">BIGINT</span> COMMENT <span class="string">&#x27;Span.timestamp(): epoch micros used for endTs query and to implement TTL&#x27;</span>,</span><br><span class="line">  `duration` <span class="type">BIGINT</span> COMMENT <span class="string">&#x27;Span.duration(): micros used for minDuration and maxDuration query&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`trace_id_high`, `trace_id`, `id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB ROW_FORMAT<span class="operator">=</span>COMPRESSED <span class="type">CHARACTER</span> <span class="keyword">SET</span><span class="operator">=</span>utf8 <span class="keyword">COLLATE</span> utf8_general_ci</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_spans <span class="keyword">ADD</span> INDEX(`trace_id_high`, `trace_id`) COMMENT <span class="string">&#x27;for getTracesByIds&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_spans <span class="keyword">ADD</span> INDEX(`name`) COMMENT <span class="string">&#x27;for getTraces and getSpanNames&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_spans <span class="keyword">ADD</span> INDEX(`remote_service_name`) COMMENT <span class="string">&#x27;for getTraces and getRemoteServiceNames&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_spans <span class="keyword">ADD</span> INDEX(`start_ts`) COMMENT <span class="string">&#x27;for getTraces ordering and range&#x27;</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> zipkin_annotations (</span><br><span class="line">  `trace_id_high` <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;If non zero, this means the trace uses 128 bit traceIds instead of 64 bit&#x27;</span>,</span><br><span class="line">  `trace_id` <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;coincides with zipkin_spans.trace_id&#x27;</span>,</span><br><span class="line">  `span_id` <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;coincides with zipkin_spans.id&#x27;</span>,</span><br><span class="line">  `a_key` <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;BinaryAnnotation.key or Annotation.value if type == -1&#x27;</span>,</span><br><span class="line">  `a_value` <span class="type">BLOB</span> COMMENT <span class="string">&#x27;BinaryAnnotation.value(), which must be smaller than 64KB&#x27;</span>,</span><br><span class="line">  `a_type` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;BinaryAnnotation.type() or -1 if Annotation&#x27;</span>,</span><br><span class="line">  `a_timestamp` <span class="type">BIGINT</span> COMMENT <span class="string">&#x27;Used to implement TTL; Annotation.timestamp or zipkin_spans.timestamp&#x27;</span>,</span><br><span class="line">  `endpoint_ipv4` <span class="type">INT</span> COMMENT <span class="string">&#x27;Null when Binary/Annotation.endpoint is null&#x27;</span>,</span><br><span class="line">  `endpoint_ipv6` <span class="type">BINARY</span>(<span class="number">16</span>) COMMENT <span class="string">&#x27;Null when Binary/Annotation.endpoint is null, or no IPv6 address&#x27;</span>,</span><br><span class="line">  `endpoint_port` <span class="type">SMALLINT</span> COMMENT <span class="string">&#x27;Null when Binary/Annotation.endpoint is null&#x27;</span>,</span><br><span class="line">  `endpoint_service_name` <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;Null when Binary/Annotation.endpoint is null&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB ROW_FORMAT<span class="operator">=</span>COMPRESSED <span class="type">CHARACTER</span> <span class="keyword">SET</span><span class="operator">=</span>utf8 <span class="keyword">COLLATE</span> utf8_general_ci</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_annotations <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> KEY(`trace_id_high`, `trace_id`, `span_id`, `a_key`, `a_timestamp`) COMMENT <span class="string">&#x27;Ignore insert on duplicate&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_annotations <span class="keyword">ADD</span> INDEX(`trace_id_high`, `trace_id`, `span_id`) COMMENT <span class="string">&#x27;for joining with zipkin_spans&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_annotations <span class="keyword">ADD</span> INDEX(`trace_id_high`, `trace_id`) COMMENT <span class="string">&#x27;for getTraces/ByIds&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_annotations <span class="keyword">ADD</span> INDEX(`endpoint_service_name`) COMMENT <span class="string">&#x27;for getTraces and getServiceNames&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_annotations <span class="keyword">ADD</span> INDEX(`a_type`) COMMENT <span class="string">&#x27;for getTraces and autocomplete values&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_annotations <span class="keyword">ADD</span> INDEX(`a_key`) COMMENT <span class="string">&#x27;for getTraces and autocomplete values&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> zipkin_annotations <span class="keyword">ADD</span> INDEX(`trace_id`, `span_id`, `a_key`) COMMENT <span class="string">&#x27;for dependencies job&#x27;</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> zipkin_dependencies (</span><br><span class="line">  `<span class="keyword">day</span>` <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `parent` <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `child` <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `call_count` <span class="type">BIGINT</span>,</span><br><span class="line">  `error_count` <span class="type">BIGINT</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`<span class="keyword">day</span>`, `parent`, `child`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB ROW_FORMAT<span class="operator">=</span>COMPRESSED <span class="type">CHARACTER</span> <span class="keyword">SET</span><span class="operator">=</span>utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br></pre></td></tr></table></figure></li><li><p>docker部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">--name zipkin \</span><br><span class="line">-e STORAGE_TYPE=mysql \</span><br><span class="line">-e MYSQL_DB=zipkindb \</span><br><span class="line">-e MYSQL_USER=root \</span><br><span class="line">-e MYSQL_PASS=root \</span><br><span class="line">-e MYSQL_HOST=192.168.56.1 \</span><br><span class="line">-e MYSQL_TCP_PORT=3306 \</span><br><span class="line">-e QUERY_PORT=9411 \</span><br><span class="line">-p 9411:9411 openzipkin/zipkin</span><br></pre></td></tr></table></figure></li><li><p>Jar部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">STORAGE_TYPE=mysql \</span><br><span class="line">MYSQL_DB=zipkindb_jar \</span><br><span class="line">MYSQL_USER=root</span><br><span class="line">MYSQL_PASS=root \</span><br><span class="line">MYSQL_HOST=192.168.56.1 \</span><br><span class="line">MYSQL_TCP_PORT=3306 \</span><br><span class="line">QUERY_PORT=9411</span><br><span class="line">nohup java -jar zipkin.jar &gt; zipkin.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></li><li><p>Kubernetes部署</p><ul><li>Secret<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-zipkin-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">xxx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">secret-zipkin-server</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="comment"># 数据库账号</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">cm9vdA==</span></span><br><span class="line">  <span class="comment"># 数据库密码</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">QmRyTWVzQDIwMjBCWkw=</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br></pre></td></tr></table></figure></li><li>Service<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: service-zipkin-server</span><br><span class="line">  namespace: xxx</span><br><span class="line">  labels:</span><br><span class="line">    app: service-zipkin-server</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - protocol: TCP</span><br><span class="line">      port: 9411</span><br><span class="line">      targetPort: 9411</span><br><span class="line">      # 对外暴露端口</span><br><span class="line">      nodePort: 32710</span><br><span class="line">  selector:</span><br><span class="line">    app: zipkin-server</span><br><span class="line">  type: NodePort</span><br><span class="line">  sessionAffinity: ClientIP</span><br></pre></td></tr></table></figure></li><li>Deployment<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: deployment-zipkin-server</span><br><span class="line">  namespace: xxx</span><br><span class="line">  labels:</span><br><span class="line">    app: zipkin-server</span><br><span class="line">spec:</span><br><span class="line">  # 副本数配置</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: zipkin-server</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: zipkin-server</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: container-zipkin-server</span><br><span class="line">          image: &#x27;openzipkin/zipkin:2.23.2&#x27;</span><br><span class="line">          # 端口配置</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 9411</span><br><span class="line">              protocol: TCP</span><br><span class="line">          # 环境变量配置</span><br><span class="line">          env:</span><br><span class="line">            - name: STORAGE_TYPE</span><br><span class="line">              value: mysql</span><br><span class="line">            - name: MYSQL_HOST</span><br><span class="line">              value: xxx</span><br><span class="line">            - name: MYSQL_TCP_PORT</span><br><span class="line">              value: &#x27;xxx&#x27;</span><br><span class="line">            - name: MYSQL_DB</span><br><span class="line">              value: xxx</span><br><span class="line">            - name: MYSQL_USER</span><br><span class="line">              valueFrom:</span><br><span class="line">                secretKeyRef:</span><br><span class="line">                  name: secret-zipkin-server</span><br><span class="line">                  key: username</span><br><span class="line">            - name: MYSQL_PASS</span><br><span class="line">              valueFrom:</span><br><span class="line">                secretKeyRef:</span><br><span class="line">                  name: secret-zipkin-server</span><br><span class="line">                  key: password</span><br><span class="line">            - name: QUERY_PORT</span><br><span class="line">              value: &#x27;9411&#x27;</span><br><span class="line">          # 存活探针配置</span><br><span class="line">          livenessProbe:</span><br><span class="line">            tcpSocket:</span><br><span class="line">              port: 9411</span><br><span class="line">            initialDelaySeconds: 120</span><br><span class="line">            timeoutSeconds: 1</span><br><span class="line">            periodSeconds: 15</span><br><span class="line">            successThreshold: 1</span><br><span class="line">            failureThreshold: 3</span><br><span class="line">          # 就绪探针配置</span><br><span class="line">          readinessProbe:</span><br><span class="line">            tcpSocket:</span><br><span class="line">              port: 9411</span><br><span class="line">            initialDelaySeconds: 10</span><br><span class="line">            timeoutSeconds: 1</span><br><span class="line">            periodSeconds: 5</span><br><span class="line">            successThreshold: 1</span><br><span class="line">            failureThreshold: 3</span><br><span class="line">          securityContext:</span><br><span class="line">            privileged: true</span><br><span class="line">      # 亲和性配置</span><br><span class="line">      affinity:</span><br><span class="line">        podAntiAffinity:</span><br><span class="line">          preferredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">            - weight: 100</span><br><span class="line">              podAffinityTerm:</span><br><span class="line">                labelSelector:</span><br><span class="line">                  matchExpressions:</span><br><span class="line">                    - key: app</span><br><span class="line">                      operator: In</span><br><span class="line">                      values:</span><br><span class="line">                        - zipkin-server</span><br><span class="line">                topologyKey: kubernetes.io/hostname</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  # 更新策略配置</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br></pre></td></tr></table></figure></li></ul></li><li><p>开放端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-port=9411/tcp</span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-项目中使用"><a href="#4-项目中使用" class="headerlink" title="4. 项目中使用"></a>4. 项目中使用</h2><ul><li><p>pom中引入zipkin依赖，同时子依赖sleuth也会被依赖了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-cloud-starter-zipkin&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li><li><p>properties中配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动sleuth，默认spring检测到引入了sleuth就会默认启动了</span></span><br><span class="line">spring.sleuth.web.client.enabled=<span class="literal">true</span></span><br><span class="line"><span class="comment"># trace-id的生成规则</span></span><br><span class="line">spring.sleuth.trace-id128=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 数据采样比例，默认是0.1，全采样设置为1.0</span></span><br><span class="line">spring.sleuth.sampler.probability=1.0</span><br><span class="line"><span class="comment"># zipkin服务IP</span></span><br><span class="line">spring.zipkin.base-url=http://192.168.56.104:9411</span><br></pre></td></tr></table></figure></li><li><p>浏览器输入Zipkin服务地址点击搜索按钮即可看到微服务中的服务调用情况（红色表明有调用异常情况）<br><img src="60e7a7566404b.png"><br><img src="60e7a76786260.png"></p></li></ul><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-官方链接&quot;&gt;&lt;a href=&quot;#1-官方链接&quot; class=&quot;headerlink&quot; title=&quot;1. 官方链接&quot;&gt;&lt;/a&gt;1. 官方链接&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;官方链接&lt;br&gt;&lt;a href=&quot;https://zipkin.io/&quot;&gt;OpenZi</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Middleware" scheme="http://gaussli.com/categories/tech/middleware/"/>
    
    <category term="Zipkin" scheme="http://gaussli.com/categories/tech/middleware/zipkin/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="Docker" scheme="http://gaussli.com/tags/docker/"/>
    
    <category term="Zipkin" scheme="http://gaussli.com/tags/zipkin/"/>
    
    <category term="二进制安装" scheme="http://gaussli.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>【Middleware】Showdoc部署及使用</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91showdoc%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91showdoc%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-26T14:15:48.000Z</published>
    <updated>2021-07-26T15:16:07.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>github：<a href="https://github.com/star7th/showdoc">https://github.com/star7th/showdoc</a></p><p>offical-website：<a href="https://www.showdoc.com.cn/">https://www.showdoc.com.cn/</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：ShowDoc是一个非常适合IT团队的在线API文档、技术文档工具。通过showdoc，你可以方便地使用markdown语法来书写出美观的API文档、数据字典文档、技术文档、在线excel文档等等。如果不想编辑markdown文档，你还可以利用showdoc的自动化能力，从程序注释中自动生成API文档，或者从搭配的RunApi客户端（类似postman的api调试工具）中一边调试接口、一边自动生成文档。通过分配项目成员和团队成员，你可以很方便地进行项目文档的权限管理和团队协作，也可以分享文档出去给朋友查看。ShowDoc还支持多平台客户端，有win客户端、mac客户端、ios、android等，更方便跨平台使用。目前超过100000+的互联网团队正在使用showdoc，包括知名公司内部的一些团队，比如腾讯、华为、百度、京东、字节跳动等等。</p></blockquote><h1 id="Docker部署"><a href="#Docker部署" class="headerlink" title="Docker部署"></a>Docker部署</h1><h2 id="1-安装Docker"><a href="#1-安装Docker" class="headerlink" title="1. 安装Docker"></a>1. 安装Docker</h2><p>略</p><h2 id="2-创建数据存储目录"><a href="#2-创建数据存储目录" class="headerlink" title="2. 创建数据存储目录"></a>2. 创建数据存储目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新增Showdoc数据存储目录并配置访问权限</span></span><br><span class="line">mkdir -p /usr/<span class="built_in">local</span>/showDoc/showdoc_data/html</span><br><span class="line">chmod -R 777 /usr/<span class="built_in">local</span>/showDoc/showdoc_data</span><br></pre></td></tr></table></figure><h2 id="3-拉取Docker镜像"><a href="#3-拉取Docker镜像" class="headerlink" title="3. 拉取Docker镜像"></a>3. 拉取Docker镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull star7th/showdoc</span><br></pre></td></tr></table></figure><h2 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4. 启动服务"></a>4. 启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name showdoc -user=root --privileged=<span class="literal">true</span> -p 4999:80 -v /usr/<span class="built_in">local</span>/showDoc/showdoc_data/html:/var/www/html star7th/showdoc</span><br></pre></td></tr></table></figure><h1 id="服务访问"><a href="#服务访问" class="headerlink" title="服务访问"></a>服务访问</h1><p>直接访问服务地址及端口，默认端口：4999。<br>访问界面截图：<br><img src="60f4e01b0562a.png"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>直接注册登录使用。注册强烈建议使用BIP账号。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="1-服务器迁移"><a href="#1-服务器迁移" class="headerlink" title="1. 服务器迁移"></a>1. 服务器迁移</h2><p>官方说明：<a href="https://www.showdoc.com.cn/help/2511252204165611">https://www.showdoc.com.cn/help/2511252204165611</a></p><h3 id="如何迁移"><a href="#如何迁移" class="headerlink" title="如何迁移"></a>如何迁移</h3><p>这里的迁移服务器，指的是：服务器A已经安装好了showdoc， 然后现在要迁移到服务器B去。</p><p>首先参考教程，在新服务器上全新安装一个showdoc。推荐使用官方自动脚本或者docker方式安装。</p><p>假如你是官方自动脚本或者docker方式安装，那么数据将放在/showdoc_data/html下。复制旧服务器的Sqlite/showdoc.db.php，以及Public/Uploads/下的所有文件（如没有则可忽略之），覆盖到新showdoc目录的相应文件。覆盖后重新给这些文件可写权限.</p><p>（可选）如果原有文档里已经有上传的图片和附件，换新的域名的时候也许访问不了。可进入数据库把图片附件路径改一下。showdoc使用sqlite数据库。数据库文件是安装目录下的Sqlite/showdoc.db.php。你可以网络搜索如何在命令行中使用 sqlite数据库，或者使用SQLiteStudio等可视化工具。进入数据库后，执行update page set page_content = replace(page_content,’原始host’,’新host’); 和 update upload_file set real_url= replace(real_url,’原始host’,’新host’);</p><h3 id="常见误区"><a href="#常见误区" class="headerlink" title="常见误区"></a>常见误区</h3><p>复制旧服务器文件过去后，忘记给可写权限<br>新服务器本身没有安装好环境，如缺少php-sqlite扩展等<br>直接用新代码覆盖旧代码，而不是按照官方推荐方式去做。<br>服务器转移数据的时候使用FTP。注意，如果使用FTP，应该用二进制模式传输，否则会破坏数据库文件</p><h2 id="2-数据库迁移"><a href="#2-数据库迁移" class="headerlink" title="2. 数据库迁移"></a>2. 数据库迁移</h2><p>官方说明：<a href="https://www.showdoc.com.cn/help/31990">https://www.showdoc.com.cn/help/31990</a></p><h3 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明"></a>一些说明</h3><p>mysql版本由于年久失修，已经放弃维护，官方不再保证能迁移成功。现在官方已在全力支持sqlite版本，请使用新版。另外如果你依然强制使用mysql，则可自行二次开发，但官方不提供支持，也请勿浪费时间问官方团队。经过二次开发的版本有可能与官方以后的版本升级冲突导致升级失败，请谨慎考虑</p><h3 id="为什么要迁移数据库"><a href="#为什么要迁移数据库" class="headerlink" title="为什么要迁移数据库"></a>为什么要迁移数据库</h3><p>如果你是早期使用mysql那部分的用户，可以考虑迁移数据库到Sqlite，否则以后无法再使用官方新增的任何功能。ShowDoc使用Sqlite的理由如下：</p><p>PHP环境默认支持Sqlite，所以只需要安装好PHP环境，即可使用ShowDoc，无须再安装mysql。这对于不懂mysql的开发者（如App开发者）来说会更容易一些。同时方便官方维护ShowDoc，不用维护和测试两个数据库版本</p><p>Sqlite的性能并不差，对于总项目数在一万以内的情况，基本不用考虑性能问题。所以完全足够普通公司或者团队的使用。</p><p>Sqlite数据库文件放在/Sqlite目录下，迁移和备份都十分简单，直接复制/转移该目录即可</p><h3 id="如何迁移-1"><a href="#如何迁移-1" class="headerlink" title="如何迁移"></a>如何迁移</h3><p>备份所有代码和数据库</p><p>下载新代码：<a href="https://github.com/star7th/showdoc">https://github.com/star7th/showdoc</a></p><p>将新代码中的/Sqlite/ 复制到旧目录(如果已存在/Sqlite则覆盖之)，并赋予/Sqlite/showdoc.db.php可写权限</p><p>复制新代码中的server/Application/Home/Controller/UpdateController.class.php 覆盖原来旧的相应文件。</p><p>在浏览器访问：<a href="http://xxxx.com/index.php?s=/home/update/toSqlite">http://xxxx.com/index.php?s=/home/update/toSqlite</a> ，看到ok提示后，mysql的数据已经写入/Sqlite/showdoc.db.php</p><p>此时，除了/Sqlite/showdoc.db.php文件外，旧目录的其他所有文件全部用新下载的文件覆盖。注意清理runtime缓存以及保留原来文件夹权限的设定。具体哪些文件需要权限，可参考安装手册。</p><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;github：&lt;a href=&quot;https://github.com/star7th/showdoc&quot;&gt;https://github.com</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Middleware" scheme="http://gaussli.com/categories/tech/middleware/"/>
    
    <category term="Showdoc" scheme="http://gaussli.com/categories/tech/middleware/showdoc/"/>
    
    
    <category term="Showdoc" scheme="http://gaussli.com/tags/showdoc/"/>
    
    <category term="Docker" scheme="http://gaussli.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>【Middleware】Redis部署及使用</title>
    <link href="http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91redis%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://gaussli.com/2021/07/26/%E3%80%90middleware%E3%80%91redis%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-26T14:07:46.000Z</published>
    <updated>2021-07-26T14:13:11.824Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>github：<a href="http://github.com/redis/redis">http://github.com/redis/redis</a></p><p>offical-website：<a href="https://redis.io/">https://redis.io/</a></p><p>民间教程：<a href="https://www.runoob.com/redis/redis-tutorial.html">https://www.runoob.com/redis/redis-tutorial.html</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.</p></blockquote><p>Redis在CentOS官方YUM-BASE源仓库中是没有的，但在EPEL源仓库中虽然是有的，但是版本太低了，是个3.x.x的版本（如下图）；而且，Redis官网是已经没有提供二进制包。所以建议使用源码安装。<br><img src="60f4e440430bb.png"></p><h1 id="源码编译安装"><a href="#源码编译安装" class="headerlink" title="源码编译安装"></a>源码编译安装</h1><h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h2><h3 id="下载应用包"><a href="#下载应用包" class="headerlink" title="下载应用包"></a>下载应用包</h3><table><thead><tr><th>应用包名称</th><th>下载地址</th></tr></thead><tbody><tr><td>redis-6.2.4.tar.gz</td><td><a href="https://download.redis.io/releases/redis-6.2.4.tar.gz">https://download.redis.io/releases/redis-6.2.4.tar.gz</a></td></tr></tbody></table><h3 id="上传应用包"><a href="#上传应用包" class="headerlink" title="上传应用包"></a>上传应用包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp redis-6.2.4.tar.gz root@xxx:/usr/<span class="built_in">local</span>/src/</span><br></pre></td></tr></table></figure><h3 id="解压应用包"><a href="#解压应用包" class="headerlink" title="解压应用包"></a>解压应用包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">tar -zxvf redis-6.2.4.tar.gz</span><br></pre></td></tr></table></figure><h3 id="安装相关工具"><a href="#安装相关工具" class="headerlink" title="安装相关工具"></a>安装相关工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc</span><br></pre></td></tr></table></figure><h3 id="切换GCC版本"><a href="#切换GCC版本" class="headerlink" title="切换GCC版本"></a>切换GCC版本</h3><p>高版本的Redis需要更高版本GCC版本来进行源码编译，所以需要提高GCC版本。<br>当前版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br></pre></td></tr></table></figure><p><img src="60f4e8cb55083.png"></p><p>通过工具devtoolset实现GCC版本切换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装devtoolset</span></span><br><span class="line"><span class="comment"># devtoolset-7对应gcc7.x.x版本</span></span><br><span class="line"><span class="comment"># devtoolset-8对应gcc8.x.x版本</span></span><br><span class="line"><span class="comment"># devtoolset-9对应gcc9.x.x版本</span></span><br><span class="line">yum install -y centos-release-scl</span><br><span class="line">yum install -y devtoolset-7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换</span></span><br><span class="line">scl <span class="built_in">enable</span> devtoolset-7 bash</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="comment"># source /opt/rh/devtoolset-7/enable</span></span><br></pre></td></tr></table></figure><p>再次查看当前版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br></pre></td></tr></table></figure><p><img src="60f4e91faa55b.png"></p><h2 id="2-源码编译并修改配置文件"><a href="#2-源码编译并修改配置文件" class="headerlink" title="2. 源码编译并修改配置文件"></a>2. 源码编译并修改配置文件</h2><h3 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make distclean</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="创建相关目录及复制配置文件"><a href="#创建相关目录及复制配置文件" class="headerlink" title="创建相关目录及复制配置文件"></a>创建相关目录及复制配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/redis/etc</span><br><span class="line">mkdir -p /usr/<span class="built_in">local</span>/redis/<span class="built_in">log</span></span><br><span class="line">mkdir -p /usr/<span class="built_in">local</span>/redis/data</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/redis-6.2.4/redis.conf /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 监听所有IP</span><br><span class="line">bind 0.0.0.0</span><br><span class="line"># 启动后台运行模式</span><br><span class="line">daemonize yes</span><br><span class="line"># 配置进程信息文件路径</span><br><span class="line">pidfile /usr/local/redis/redis.pid</span><br><span class="line"># 配置日志文件路径</span><br><span class="line">logfile /usr/local/redis/log/redis.log</span><br><span class="line"># 配置数据持久化路径</span><br><span class="line">dir /usr/local/redis/data</span><br><span class="line"># 配置访问密钥</span><br><span class="line">requirepass xxx</span><br></pre></td></tr></table></figure><h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><h2 id="4-验证服务"><a href="#4-验证服务" class="headerlink" title="4. 验证服务"></a>4. 验证服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看Redis进程</span></span><br><span class="line">ps -ef | grep redis</span><br><span class="line"><span class="comment"># 访问Redis服务</span></span><br><span class="line">redis-cli</span><br></pre></td></tr></table></figure><p><img src="60f51a4476a63.png"></p><h2 id="5-开放端口"><a href="#5-开放端口" class="headerlink" title="5. 开放端口"></a>5. 开放端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=6379/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h1 id="主从配置"><a href="#主从配置" class="headerlink" title="主从配置"></a>主从配置</h1><h2 id="1-准备Redis从库"><a href="#1-准备Redis从库" class="headerlink" title="1. 准备Redis从库"></a>1. 准备Redis从库</h2><p>安装方式和上述源码编译安装一致，配置文件也一并修改，除了上述的配置属性外，还需要修改下面属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 配置主库的IP和端口</span><br><span class="line">replicaof xxx_ip xxx_port</span><br><span class="line"># 配置主库的验证密钥</span><br><span class="line">masterauth xxx</span><br><span class="line"># 如果从库允许写操作，配置非只读，默认是只读</span><br><span class="line"># replica-read-only no</span><br></pre></td></tr></table></figure><h2 id="2-启动从库服务"><a href="#2-启动从库服务" class="headerlink" title="2. 启动从库服务"></a>2. 启动从库服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><h1 id="哨兵配置"><a href="#哨兵配置" class="headerlink" title="哨兵配置"></a>哨兵配置</h1><h2 id="1-创建哨兵服务相关目录及复制哨兵服务配置文件"><a href="#1-创建哨兵服务相关目录及复制哨兵服务配置文件" class="headerlink" title="1. 创建哨兵服务相关目录及复制哨兵服务配置文件"></a>1. 创建哨兵服务相关目录及复制哨兵服务配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/redis/data-sentinel</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/redis-6.2.4/sentinel.conf /usr/<span class="built_in">local</span>/redis/etc/sentinel.conf</span><br></pre></td></tr></table></figure><h2 id="2-修改哨兵服务配置文件"><a href="#2-修改哨兵服务配置文件" class="headerlink" title="2. 修改哨兵服务配置文件"></a>2. 修改哨兵服务配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/redis/etc/sentinel.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 监听所有IP或直接禁用保护模式</span><br><span class="line"># protected-mode no</span><br><span class="line">bind 0.0.0.0</span><br><span class="line"># 启动后台运行模式</span><br><span class="line">daemonize yes</span><br><span class="line"># 配置进程信息文件路径</span><br><span class="line">pidfile /usr/local/redis/redis-sentinel.pid</span><br><span class="line"># 配置日志文件路径</span><br><span class="line">logfile /usr/local/redis/log/redis-sentinel.log</span><br><span class="line"># 配置数据持久化路径</span><br><span class="line">dir /usr/local/redis/data-sentinel</span><br><span class="line"># 配置哨兵服务监听主库的信息</span><br><span class="line"># 这里sentinel monitor代表监控；mymaster代表服务器的名称，可以自定义；1代表只有一个或一个以上的哨兵认为主服务器不可用的时候，才会进行failover操作。</span><br><span class="line">sentinel monitor mymaster &lt;主库IP&gt; &lt;主库端口&gt; 1</span><br><span class="line"># 配置主库验证密钥</span><br><span class="line">sentinel auth-pass mymaster xxx</span><br></pre></td></tr></table></figure><h2 id="3-启动哨兵服务"><a href="#3-启动哨兵服务" class="headerlink" title="3. 启动哨兵服务"></a>3. 启动哨兵服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-sentinel /usr/local/redis/etc/sentinel.conf</span><br></pre></td></tr></table></figure><h2 id="4-开放哨兵服务端口"><a href="#4-开放哨兵服务端口" class="headerlink" title="4. 开放哨兵服务端口"></a>4. 开放哨兵服务端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=26379/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h1 id="Redis服务开机自启动"><a href="#Redis服务开机自启动" class="headerlink" title="Redis服务开机自启动"></a>Redis服务开机自启动</h1><h2 id="1-配置自启动文件"><a href="#1-配置自启动文件" class="headerlink" title="1. 配置自启动文件"></a>1. 配置自启动文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/redis/etc/redis.service</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis-Server</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/redis/redis.pid</span><br><span class="line">ExecStart=/usr/local/bin/redis-server /usr/local/redis/etc/redis.conf</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/usr/local/bin/redis-cli -p `cat /usr/local/redis/etc/redis.conf | egrep &#x27;^port&#x27; | awk &#x27;&#123;print $2&#125;&#x27;` -a `cat /usr/local/redis/etc/redis.conf | egrep &#x27;^requirepass&#x27; | awk &#x27;&#123;print $2&#125;&#x27;` SHUTDOWN</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="2-软链到系统服务目录"><a href="#2-软链到系统服务目录" class="headerlink" title="2. 软链到系统服务目录"></a>2. 软链到系统服务目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/redis/etc/redis.service /etc/systemd/system/</span><br></pre></td></tr></table></figure><h2 id="3-设置开机自启并启动服务"><a href="#3-设置开机自启并启动服务" class="headerlink" title="3. 设置开机自启并启动服务"></a>3. 设置开机自启并启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> redis.service</span><br><span class="line">systemctl start redis.service</span><br></pre></td></tr></table></figure><h2 id="4-查看服务状态"><a href="#4-查看服务状态" class="headerlink" title="4. 查看服务状态"></a>4. 查看服务状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status redis.service</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f5387614667.png"></p><h1 id="哨兵服务开机自启动"><a href="#哨兵服务开机自启动" class="headerlink" title="哨兵服务开机自启动"></a>哨兵服务开机自启动</h1><h2 id="1-配置自启动文件-1"><a href="#1-配置自启动文件-1" class="headerlink" title="1. 配置自启动文件"></a>1. 配置自启动文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/redis/etc/redis-sentinel.service</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Redis-Sentinel-Server</span><br><span class="line">After=network.target redis.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/redis/redis-sentinel.pid</span><br><span class="line">ExecStart=/usr/local/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/usr/local/bin/redis-cli -p `cat /usr/local/redis/etc/sentinel.conf | egrep &#x27;^port&#x27; | awk &#x27;&#123;print $2&#125;&#x27;` SHUTDOWN</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="2-软链到系统服务目录-1"><a href="#2-软链到系统服务目录-1" class="headerlink" title="2. 软链到系统服务目录"></a>2. 软链到系统服务目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/redis/etc/redis-sentinel.service /etc/systemd/system/</span><br></pre></td></tr></table></figure><h2 id="3-设置开机自启并启动服务-1"><a href="#3-设置开机自启并启动服务-1" class="headerlink" title="3. 设置开机自启并启动服务"></a>3. 设置开机自启并启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> redis-sentinel.service</span><br><span class="line">systemctl start redis-sentinel.service</span><br></pre></td></tr></table></figure><h2 id="4-查看服务状态-1"><a href="#4-查看服务状态-1" class="headerlink" title="4. 查看服务状态"></a>4. 查看服务状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status redis-sentinel.service</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f53a630d120.png"></p><h1 id="SpringBoot中使用"><a href="#SpringBoot中使用" class="headerlink" title="SpringBoot中使用"></a>SpringBoot中使用</h1><h2 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1. 引入依赖"></a>1. 引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- SpringBoot-Redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Redis池化技术依赖此包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-修改SpringBoot配置文件（application-yml或application-properties）"><a href="#2-修改SpringBoot配置文件（application-yml或application-properties）" class="headerlink" title="2. 修改SpringBoot配置文件（application.yml或application.properties）"></a>2. 修改SpringBoot配置文件（application.yml或application.properties）</h2><h3 id="单服务Redis"><a href="#单服务Redis" class="headerlink" title="单服务Redis"></a>单服务Redis</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 配置Redis信息</span><br><span class="line">spring.redis.host = &lt;Redis服务IP&gt;</span><br><span class="line">spring.redis.port = &lt;Redis服务端口&gt;</span><br><span class="line">spring.redis.password = &lt;Redis验证密钥&gt;</span><br><span class="line">spring.redis.database = &lt;Redis数据库索引（0-15）&gt;</span><br><span class="line">spring.redis.timeout = 20000</span><br><span class="line">spring.redis.lettuce.pool.max-active = 8</span><br><span class="line">spring.redis.lettuce.pool.min-idle = 1</span><br><span class="line">spring.redis.lettuce.pool.max-idle = 8</span><br><span class="line">spring.redis.lettuce.pool.max-wait = 600000ms</span><br><span class="line">spring.redis.lettuce.pool.time-between-eviction-runs = 900000ms</span><br></pre></td></tr></table></figure><h3 id="哨兵模式Redis"><a href="#哨兵模式Redis" class="headerlink" title="哨兵模式Redis"></a>哨兵模式Redis</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 配置Redis信息</span><br><span class="line">spring.redis.database = &lt;Redis数据库索引（0-15）&gt;</span><br><span class="line">spring.redis.timeout = 20000</span><br><span class="line">spring.redis.lettuce.pool.max-active = 8</span><br><span class="line">spring.redis.lettuce.pool.min-idle = 1</span><br><span class="line">spring.redis.lettuce.pool.max-idle = 8</span><br><span class="line">spring.redis.lettuce.pool.max-wait = 600000ms</span><br><span class="line">spring.redis.lettuce.pool.time-between-eviction-runs = 900000ms</span><br><span class="line"># 配置Redis哨兵服务信息</span><br><span class="line">spring.redis.sentinel.master = &lt;哨兵配置文件配置的主库服务名，默认是mymaster&gt;</span><br><span class="line">spring.redis.sentinel.nodes = &lt;哨兵服务IP1&gt;, &lt;哨兵服务IP2&gt;</span><br></pre></td></tr></table></figure><h2 id="3-注入RedisTemplate或StringRedisTemplate对象"><a href="#3-注入RedisTemplate或StringRedisTemplate对象" class="headerlink" title="3. 注入RedisTemplate或StringRedisTemplate对象"></a>3. 注入RedisTemplate或StringRedisTemplate对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;github：&lt;a href=&quot;http://github.com/redis/redis&quot;&gt;http://github.com/redis</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Middleware" scheme="http://gaussli.com/categories/tech/middleware/"/>
    
    
    <category term="源码安装" scheme="http://gaussli.com/tags/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/"/>
    
    <category term="Redis" scheme="http://gaussli.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>XXL-JOB部署及使用</title>
    <link href="http://gaussli.com/2021/07/26/xxl-job%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://gaussli.com/2021/07/26/xxl-job%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-26T08:36:44.000Z</published>
    <updated>2021-07-26T15:12:21.769Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>github：<a href="https://github.com/xuxueli/xxl-job">https://github.com/xuxueli/xxl-job</a></p><p>offical-website：<a href="http://www.xuxueli.com/xxl-job/">http://www.xuxueli.com/xxl-job/</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：XXL-JOB是一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。</p></blockquote><h1 id="Kubernetes方式安装"><a href="#Kubernetes方式安装" class="headerlink" title="Kubernetes方式安装"></a>Kubernetes方式安装</h1><p>修改其中<code>&lt;namespace-name&gt;</code>、<code>&lt;mysql-username&gt;</code>、<code>&lt;mysql-password&gt;</code>、<code>&lt;mysql-url&gt;</code>、<code>&lt;xxl-job-accesstoken&gt;</code>、<code>&lt;xxl-job-admin-outside-port&gt;</code>的内容。其中<code>&lt;mysql-username&gt;</code>、<code>&lt;mysql-password&gt;</code>、<code>&lt;xxl-job-accesstoken&gt;</code>的内容需要进行Base64编码；<code>&lt;xxl-job-admin-outside-port&gt;</code>为XXL-JOB-ADMIN服务向外暴露端口，Kubernetes默认可向外暴露端口范围为30000-32767。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># secret for xxl-job-admin-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-xxl-job-admin-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">secret-xxl-job-admin-server</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">datasource_username:</span> <span class="string">&lt;mysql-username&gt;</span></span><br><span class="line">  <span class="attr">datasource_password:</span> <span class="string">&lt;mysql-password&gt;</span></span><br><span class="line">  <span class="attr">xxl_job_accesstoken:</span> <span class="string">&lt;xxl-job-accesstoken&gt;</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># headless service for xxl-job-admin</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">service-xxl-job-admin-server-headless</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">service-xxl-job-admin-server-headless</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">xxl-job-admin-server</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># service for xxl-job-admin</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">service-xxl-job-admin-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">service-xxl-job-admin-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="string">&lt;xxl-job-admin-outside-port&gt;</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">xxl-job-admin-server</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># statefulset for xxl-job-admin</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">statefulset-xxl-job-admin-server</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">xxl-job-admin-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">service-xxl-job-admin-server-headless</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">xxl-job-admin-server</span></span><br><span class="line">  <span class="attr">updateStrategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">xxl-job-admin-server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 亲和性定义</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="comment"># 非亲和性策略</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">100</span></span><br><span class="line">              <span class="attr">podAffinityTerm:</span></span><br><span class="line">                <span class="attr">labelSelector:</span></span><br><span class="line">                  <span class="attr">matchExpressions:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                      <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                      <span class="attr">values:</span></span><br><span class="line">                        <span class="bullet">-</span> <span class="string">xxl-job-admin-server</span></span><br><span class="line">                <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">container-xxl-job-admin-server</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;xuxueli/xxl-job-admin:2.3.0&#x27;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="comment"># 环境变量</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_URL</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;&lt;mysql-url&gt;&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_USERNAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-xxl-job-admin-server</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">datasource_username</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-xxl-job-admin-server</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">datasource_password</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">XXL_JOB_ACCESSTOKEN</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-xxl-job-admin-server</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">xxl_job_accesstoken</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">120</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="comment"># 就绪探针</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="comment"># 镜像拉取策略</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">      <span class="comment"># 重启策略</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h1 id="服务访问"><a href="#服务访问" class="headerlink" title="服务访问"></a>服务访问</h1><p>直接访问XXL-JOB-ADMIN服务对外的端口，账号密码默认为：admin/123456<br>访问界面截图：<br><img src="60f148f315483.png"></p><h1 id="SpringBoot中使用"><a href="#SpringBoot中使用" class="headerlink" title="SpringBoot中使用"></a>SpringBoot中使用</h1><h2 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1. 引入依赖"></a>1. 引入依赖</h2><p>注意版本强烈建议和部署的服务版本一致</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xuxueli<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xxl-job-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;xxl-job.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-修改SpringBoot配置文件（application-yml或application-properties）"><a href="#2-修改SpringBoot配置文件（application-yml或application-properties）" class="headerlink" title="2. 修改SpringBoot配置文件（application.yml或application.properties）"></a>2. 修改SpringBoot配置文件（application.yml或application.properties）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">## 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行&quot;执行器心跳注册&quot;和&quot;任务结果回调&quot;；为空则关闭自动注册；</span><br><span class="line">xxl.job.admin.addresses = http://&lt;IP:PORT&gt;/xxl-job-admin</span><br><span class="line">## 执行器通讯TOKEN [选填]：非空时启用；</span><br><span class="line">xxl.job.accessToken = &lt;xxl-job-accesstoken&gt;</span><br><span class="line"># xxl-job执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册</span><br><span class="line">xxl.job.executor.appname = &lt;executor-xxx&gt;</span><br><span class="line">## 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；</span><br><span class="line">xxl.job.executor.port = 9999</span><br><span class="line">## 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。</span><br><span class="line">xxl.job.executor.address =</span><br><span class="line">## 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 &quot;执行器注册&quot; 和 &quot;调度中心请求并触发任务&quot;；</span><br><span class="line">xxl.job.executor.ip =</span><br><span class="line">## 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；</span><br><span class="line">xxl.job.executor.logpath = log/xxl-job/jobhandler</span><br><span class="line">## 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；</span><br><span class="line">xxl.job.executor.logretentiondays = 30</span><br></pre></td></tr></table></figure><h2 id="3-使用注解-XxlJob-quot-lt-executor-xxx-gt-quot-执行定时任务逻辑"><a href="#3-使用注解-XxlJob-quot-lt-executor-xxx-gt-quot-执行定时任务逻辑" class="headerlink" title="3. 使用注解@XxlJob(&quot;&lt;executor-xxx&gt;&quot;)执行定时任务逻辑"></a>3. 使用注解<code>@XxlJob(&quot;&lt;executor-xxx&gt;&quot;)</code>执行定时任务逻辑</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoXxlJob</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XxlJob(&quot;&lt;executor-xxx&gt;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ReturnT&lt;String&gt; <span class="title">demoJobHandler</span><span class="params">(String param)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//TODO 具体的定时任务逻辑</span></span><br><span class="line">        <span class="keyword">return</span> ReturnT.SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;github：&lt;a href=&quot;https://github.com/xuxueli/xxl-job&quot;&gt;https://github.com</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Middleware" scheme="http://gaussli.com/categories/tech/middleware/"/>
    
    <category term="xxl-job" scheme="http://gaussli.com/categories/tech/middleware/xxl-job/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="xxl-job" scheme="http://gaussli.com/tags/xxl-job/"/>
    
    <category term="任务调度" scheme="http://gaussli.com/tags/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/"/>
    
    <category term="分布式" scheme="http://gaussli.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Apollo部署及使用</title>
    <link href="http://gaussli.com/2021/07/26/apollo%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://gaussli.com/2021/07/26/apollo%E9%83%A8%E7%BD%B2%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2021-07-26T08:28:16.000Z</published>
    <updated>2021-07-26T15:11:38.067Z</updated>
    
    <content type="html"><![CDATA[<h1 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h1><p>github: <a href="https://github.com/ctripcorp/apollo/">https://github.com/ctripcorp/apollo/</a></p><p>official-website: <a href="https://www.apolloconfig.com/">https://www.apolloconfig.com/</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>官方说明：Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p></blockquote><p>Apollo分为三个部分，Apollo-configservice、Apollo-adminservice、Apollo-portal。其中configservice和adminservice构成配置管理的服务，同时configservice作为Eureka服务器提供服务发现的能力，部署在同一台服务器上；portal是Apollo的web管理端服务，可单独部署在不同的服务器上。</p><h1 id="脚本方式安装"><a href="#脚本方式安装" class="headerlink" title="脚本方式安装"></a>脚本方式安装</h1><p>当前部署是三个服务都部署在同一台服务器上。</p><h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h2><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>略</p><h3 id="下载应用包"><a href="#下载应用包" class="headerlink" title="下载应用包"></a>下载应用包</h3><table><thead><tr><th>应用包名称</th><th>下载地址</th></tr></thead><tbody><tr><td>apollo-configservice-1.8.1-github.zip</td><td><a href="https://github.com/ctripcorp/apollo/releases/download/v1.8.1/apollo-configservice-1.8.1-github.zip">https://github.com/ctripcorp/apollo/releases/download/v1.8.1/apollo-configservice-1.8.1-github.zip</a></td></tr><tr><td>apollo-adminservice-1.8.1-github.zip</td><td><a href="https://github.com/ctripcorp/apollo/releases/download/v1.8.1/apollo-adminservice-1.8.1-github.zip">https://github.com/ctripcorp/apollo/releases/download/v1.8.1/apollo-adminservice-1.8.1-github.zip</a></td></tr><tr><td>apollo-portal-1.8.1-github.zip</td><td><a href="https://github.com/ctripcorp/apollo/releases/download/v1.8.1/apollo-portal-1.8.1-github.zip">https://github.com/ctripcorp/apollo/releases/download/v1.8.1/apollo-portal-1.8.1-github.zip</a></td></tr><tr><td>apolloconfigdb.sql</td><td><a href="https://github.com/ctripcorp/apollo/blob/v1.8.1/scripts/sql/apolloconfigdb.sql">https://github.com/ctripcorp/apollo/blob/v1.8.1/scripts/sql/apolloconfigdb.sql</a></td></tr><tr><td>apolloportaldb.sql</td><td><a href="https://github.com/ctripcorp/apollo/blob/v1.8.1/scripts/sql/apolloportaldb.sql">https://github.com/ctripcorp/apollo/blob/v1.8.1/scripts/sql/apolloportaldb.sql</a></td></tr></tbody></table><h3 id="上传应用包"><a href="#上传应用包" class="headerlink" title="上传应用包"></a>上传应用包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp apollo-configservice-1.8.1-github.zip root@xxx:/usr/<span class="built_in">local</span>/src/</span><br><span class="line">scp apollo-adminservice-1.8.1-github.zip root@xxx:/usr/<span class="built_in">local</span>/src/</span><br><span class="line">scp apollo-portal-1.8.1-github.zip root@xxx:/usr/<span class="built_in">local</span>/src/</span><br></pre></td></tr></table></figure><h3 id="安装zip解压工具"><a href="#安装zip解压工具" class="headerlink" title="安装zip解压工具"></a>安装zip解压工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y unzip</span><br></pre></td></tr></table></figure><h3 id="解压应用包"><a href="#解压应用包" class="headerlink" title="解压应用包"></a>解压应用包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">unzip -d apollo-configservice apollo-configservice-1.8.1-github.zip</span><br><span class="line">unzip -d apollo-adminservice apollo-adminservice-1.8.1-github.zip</span><br><span class="line">unzip -d apollo-portal apollo-portal-1.8.1-github.zip</span><br></pre></td></tr></table></figure><h3 id="移动到安装目录（-usr-local-apollo）"><a href="#移动到安装目录（-usr-local-apollo）" class="headerlink" title="移动到安装目录（/usr/local/apollo）"></a>移动到安装目录（/usr/local/apollo）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/apollo</span><br><span class="line">mv /usr/<span class="built_in">local</span>/src/apollo-configservice /usr/<span class="built_in">local</span>/apollo/apollo-configservice</span><br><span class="line">mv /usr/<span class="built_in">local</span>/src/apollo-adminservice /usr/<span class="built_in">local</span>/apollo/apollo-adminservice</span><br><span class="line">mv /usr/<span class="built_in">local</span>/src/apollo-portal /usr/<span class="built_in">local</span>/apollo/apollo-portal</span><br></pre></td></tr></table></figure><h2 id="2-创建数据库"><a href="#2-创建数据库" class="headerlink" title="2. 创建数据库"></a>2. 创建数据库</h2><h3 id="创建apolloconfigdb数据库"><a href="#创建apolloconfigdb数据库" class="headerlink" title="创建apolloconfigdb数据库"></a>创建apolloconfigdb数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MySQL命令行中</span></span><br><span class="line"><span class="comment"># 注意下载的sql文件已包含创建数据库的sql语句，按需修改</span></span><br><span class="line"><span class="built_in">source</span> apolloconfigdb.sql;</span><br></pre></td></tr></table></figure><h3 id="创建apolloportaldb数据库"><a href="#创建apolloportaldb数据库" class="headerlink" title="创建apolloportaldb数据库"></a>创建apolloportaldb数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MySQL命令行中</span></span><br><span class="line"><span class="comment"># 注意下载的sql文件已包含创建数据库的sql语句，按需修改</span></span><br><span class="line"><span class="built_in">source</span> apolloportaldb.sql;</span><br></pre></td></tr></table></figure><h2 id="3-部署apollo-configservice服务"><a href="#3-部署apollo-configservice服务" class="headerlink" title="3. 部署apollo-configservice服务"></a>3. 部署apollo-configservice服务</h2><h3 id="配置数据库参数"><a href="#配置数据库参数" class="headerlink" title="配置数据库参数"></a>配置数据库参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改spring.datasource.url、spring.datasource.username、spring.datasource.password三个参数</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/apollo/apollo-configservice/config/application-github.properties</span><br></pre></td></tr></table></figure><h3 id="启动apollo-configservice服务"><a href="#启动apollo-configservice服务" class="headerlink" title="启动apollo-configservice服务"></a>启动apollo-configservice服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /usr/<span class="built_in">local</span>/apollo/apollo-configservice/scripts/startup.sh</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f03e6a638cf.png"></p><h3 id="查看apollo-configservice运行日志目录"><a href="#查看apollo-configservice运行日志目录" class="headerlink" title="查看apollo-configservice运行日志目录"></a>查看apollo-configservice运行日志目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /opt/logs/100003171/apollo-configservice.log</span><br></pre></td></tr></table></figure><h2 id="4-部署apollo-adminservice"><a href="#4-部署apollo-adminservice" class="headerlink" title="4. 部署apollo-adminservice"></a>4. 部署apollo-adminservice</h2><h3 id="配置数据库参数-1"><a href="#配置数据库参数-1" class="headerlink" title="配置数据库参数"></a>配置数据库参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改spring.datasource.url、spring.datasource.username、spring.datasource.password三个参数</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/apollo/apollo-adminservice/config/application-github.properties</span><br></pre></td></tr></table></figure><h3 id="启动apollo-adminservice服务"><a href="#启动apollo-adminservice服务" class="headerlink" title="启动apollo-adminservice服务"></a>启动apollo-adminservice服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /usr/<span class="built_in">local</span>/apollo/apollo-adminservice/scripts/startup.sh</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f0d968ceb4c.png"></p><h3 id="查看apollo-adminservice运行日志目录"><a href="#查看apollo-adminservice运行日志目录" class="headerlink" title="查看apollo-adminservice运行日志目录"></a>查看apollo-adminservice运行日志目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /opt/logs/100003172/apollo-adminservice.log</span><br></pre></td></tr></table></figure><h2 id="5-部署apollo-portal服务"><a href="#5-部署apollo-portal服务" class="headerlink" title="5. 部署apollo-portal服务"></a>5. 部署apollo-portal服务</h2><h3 id="配置数据库参数-2"><a href="#配置数据库参数-2" class="headerlink" title="配置数据库参数"></a>配置数据库参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改spring.datasource.url、spring.datasource.username、spring.datasource.password三个参数</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/apollo/apollo-portal/config/application-github.properties</span><br></pre></td></tr></table></figure><h3 id="配置portal服务所管理的环境"><a href="#配置portal服务所管理的环境" class="headerlink" title="配置portal服务所管理的环境"></a>配置portal服务所管理的环境</h3><p>根据Apollo官方的部署方案，portal服务是同时管理各个环境下的Apollo-Config，所以需要指定portal服务能管理的环境参数以及对应的config服务地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定portal服务所管理的环境参数</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/apollo/apollo-portal/config/application-github.properties</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## vi中添加所管理的环境参数，多个参数逗号（,）隔开。（下面参数值只是例子，按需修改）</span><br><span class="line">apollo.portal.envs = DEV,UAT</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 配置对应的config服务地址</span><br><span class="line">vi /usr/local/apollo/apollo-portal/config/apollo-env.properties</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 修改dev.meta和uat.meta的值，此处配置的服务地址需和apollo.portal.envs参数值对应（下面参数值只是例子，按需修改）</span><br><span class="line">dev.meta=http://fill-in-dev-meta-server:8080</span><br><span class="line">uat.meta=http://fill-in-uat-meta-server:8080</span><br></pre></td></tr></table></figure><h3 id="启动apollo-portal服务"><a href="#启动apollo-portal服务" class="headerlink" title="启动apollo-portal服务"></a>启动apollo-portal服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /usr/<span class="built_in">local</span>/apollo/apollo-portal/scripts/startup.sh</span><br></pre></td></tr></table></figure><p>结果截图：<br><img src="60f0e21b0f691.png"></p><h3 id="查看apollo-adminservice运行日志目录-1"><a href="#查看apollo-adminservice运行日志目录-1" class="headerlink" title="查看apollo-adminservice运行日志目录"></a>查看apollo-adminservice运行日志目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /opt/logs/100003173/apollo-portal.log</span><br></pre></td></tr></table></figure><h2 id="6-开放端口"><a href="#6-开放端口" class="headerlink" title="6. 开放端口"></a>6. 开放端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=8070/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="7-服务停止"><a href="#7-服务停止" class="headerlink" title="7. 服务停止"></a>7. 服务停止</h2><h3 id="apollo-configservice服务停止"><a href="#apollo-configservice服务停止" class="headerlink" title="apollo-configservice服务停止"></a>apollo-configservice服务停止</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /usr/<span class="built_in">local</span>/apollo/apollo-configservice/scripts/shutdown.sh</span><br></pre></td></tr></table></figure><h3 id="apollo-adminservice服务停止"><a href="#apollo-adminservice服务停止" class="headerlink" title="apollo-adminservice服务停止"></a>apollo-adminservice服务停止</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /usr/<span class="built_in">local</span>/apollo/apollo-adminservice/scripts/shutdown.sh</span><br></pre></td></tr></table></figure><h3 id="apollo-portal服务停止"><a href="#apollo-portal服务停止" class="headerlink" title="apollo-portal服务停止"></a>apollo-portal服务停止</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /usr/<span class="built_in">local</span>/apollo/apollo-portal/scripts/shutdown.sh</span><br></pre></td></tr></table></figure><h1 id="Kuebrnetes方式安装"><a href="#Kuebrnetes方式安装" class="headerlink" title="Kuebrnetes方式安装"></a>Kuebrnetes方式安装</h1><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h2><p>和脚本方式安装中创建数据库步骤一致</p><h2 id="2-部署apollo-configservice服务"><a href="#2-部署apollo-configservice服务" class="headerlink" title="2. 部署apollo-configservice服务"></a>2. 部署apollo-configservice服务</h2><p>修改其中<code>&lt;namespace-name&gt;</code>、<code>&lt;mysql-username&gt;</code>、<code>&lt;mysql-password&gt;</code>、<code>&lt;mysql-url&gt;</code>的内容。其中<code>&lt;mysql-username&gt;</code>、<code>&lt;mysql-password&gt;</code>的内容需要进行Base64编码。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># secret for apollo-config-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-apollo-config-server-mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">secret-apollo-config-server-mysql</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">&lt;mysql-username&gt;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&lt;mysql-password&gt;</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># configmap for apollo-config-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-apollo-config-server</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">application-github.properties:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    spring.datasource.url = jdbc:mysql://service-mysql-for-apollo-env:3306/ProdApolloConfigDB?characterEncoding=utf8</span></span><br><span class="line"><span class="string">    spring.datasource.username = FillInCorrectUser</span></span><br><span class="line"><span class="string">    spring.datasource.password = FillInCorrectPassword</span></span><br><span class="line"><span class="string">    # 根据statefulset-apollo-config-server的副本数按需修改</span></span><br><span class="line"><span class="string">    eureka.service.url = http://statefulset-apollo-config-server-0.service-apollo-meta-server:8080/eureka/,http://statefulset-apollo-config-server-1.service-apollo-meta-server:8080/eureka/,http://statefulset-apollo-config-server-2.service-apollo-meta-server:8080/eureka/</span></span><br><span class="line"><span class="string"></span><span class="meta">---</span></span><br><span class="line"><span class="comment"># service for apollo-meta</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">service-apollo-meta-server</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">service-apollo-meta-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apollo-config-server</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># service for apollo-config</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">service-apollo-config-server</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">service-apollo-config-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apollo-config-server</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># statefulset for apollo-config</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">statefulset-apollo-config-server</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apollo-config-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">service-apollo-meta-server</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">apollo-config-server</span></span><br><span class="line">  <span class="attr">updateStrategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">apollo-config-server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 亲和性定义</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="comment"># 非亲和性策略</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">100</span></span><br><span class="line">            <span class="attr">podAffinityTerm:</span></span><br><span class="line">              <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                  <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                  <span class="attr">values:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">apollo-config-server</span></span><br><span class="line">              <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">      <span class="comment"># 存储资源定义</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-apollo-config-server</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">configmap-apollo-config-server</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">application-github.properties</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">application-github.properties</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">apolloconfig/apollo-configservice:1.8.1</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">          <span class="comment"># 镜像拉取策略</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">container-apollo-config-server</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">          <span class="comment"># 存储资源挂载</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-apollo-config-server</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/apollo-configservice/config/application-github.properties</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">application-github.properties</span></span><br><span class="line">          <span class="comment"># 环境变量</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_URL</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;&lt;mysql-url&gt;&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_USERNAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-apollo-config-server-mysql</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">username</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-apollo-config-server-mysql</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">          <span class="comment"># 就绪探针</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">300</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="comment"># 重启策略</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h2 id="3-部署apollo-adminservice服务"><a href="#3-部署apollo-adminservice服务" class="headerlink" title="3. 部署apollo-adminservice服务"></a>3. 部署apollo-adminservice服务</h2><p>修改其中<code>&lt;namespace-name&gt;</code>、<code>&lt;mysql-url&gt;</code>的内容。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># configmap for apollo-admin-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-apollo-admin-server</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">application-github.properties:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    spring.datasource.url = jdbc:mysql://service-mysql-for-apollo-env:3306/ProdApolloConfigDB?characterEncoding=utf8</span></span><br><span class="line"><span class="string">    spring.datasource.username = FillInCorrectUser</span></span><br><span class="line"><span class="string">    spring.datasource.password = FillInCorrectPassword</span></span><br><span class="line"><span class="string">    # 根据statefulset-apollo-config-server的副本数按需修改</span></span><br><span class="line"><span class="string">    eureka.service.url = http://statefulset-apollo-config-server-0.service-apollo-meta-server:8080/eureka/,http://statefulset-apollo-config-server-1.service-apollo-meta-server:8080/eureka/,http://statefulset-apollo-config-server-2.service-apollo-meta-server:8080/eureka/</span></span><br><span class="line"><span class="string"></span><span class="meta">---</span></span><br><span class="line"><span class="comment"># service for apollo-admin</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">service-apollo-admin-server</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">service-apollo-admin-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8090</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apollo-admin-server</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># deployment for apollo-admin</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-apollo-admin-server</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apollo-admin-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">apollo-admin-server</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">apollo-admin-server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 亲和性定义</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="comment"># 非亲和性策略</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">100</span></span><br><span class="line">            <span class="attr">podAffinityTerm:</span></span><br><span class="line">              <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                  <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                  <span class="attr">values:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">apollo-admin-server</span></span><br><span class="line">              <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">      <span class="comment"># 存储资源定义</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-apollo-admin-server</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">configmap-apollo-admin-server</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">application-github.properties</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">application-github.properties</span></span><br><span class="line">      <span class="comment"># 初始容器</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">dwdraju/alpine-curl-jq</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">check-service-apollo-config-server</span></span><br><span class="line">          <span class="attr">command:</span> [<span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, <span class="string">&quot;curl --connect-timeout 2 --max-time 5 --retry 50 --retry-delay 1 --retry-max-time 120 service-apollo-config-server:8080&quot;</span>]</span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">apolloconfig/apollo-adminservice:1.8.1</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">          <span class="comment"># 镜像拉取策略</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">container-apollo-admin-server</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8090</span></span><br><span class="line">          <span class="comment"># 存储资源挂载</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-apollo-admin-server</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/apollo-adminservice/config/application-github.properties</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">application-github.properties</span></span><br><span class="line">          <span class="comment"># 环境变量</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_URL</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;&lt;mysql-url&gt;&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_USERNAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-apollo-config-server-mysql</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">username</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-apollo-config-server-mysql</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">          <span class="comment"># 就绪探针</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">300</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h2 id="4-部署apollo-portal服务"><a href="#4-部署apollo-portal服务" class="headerlink" title="4. 部署apollo-portal服务"></a>4. 部署apollo-portal服务</h2><p>修改其中<code>&lt;namespace-name&gt;</code>、<code>&lt;mysql-username&gt;</code>、<code>&lt;mysql-password&gt;</code>、<code>&lt;mysql-url&gt;</code>、<code>&lt;apollo-portal-outside-port&gt;</code>的内容。其中<code>&lt;mysql-username&gt;</code>、<code>&lt;mysql-password&gt;</code>的内容需要进行Base64编；<code>&lt;apollo-portal-outside-port&gt;</code>为Portal向外暴露端口，Kubernetes默认可向外暴露端口范围为30000-32767。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># secret for apollo-portal-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-apollo-portal-server-mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">secret-apollo-portal-server-mysql</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">&lt;mysql-username&gt;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&lt;mysql-password&gt;</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># configmap for apollo-portal-server</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">configmap-apollo-portal-server</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">application-github.properties:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    spring.datasource.url = jdbc:mysql://service-mysql-for-portal-server:3306/ApolloPortalDB?characterEncoding=utf8</span></span><br><span class="line"><span class="string">    spring.datasource.username = FillInCorrectUser</span></span><br><span class="line"><span class="string">    spring.datasource.password = FillInCorrectPassword</span></span><br><span class="line"><span class="string">    # 指定访问前缀</span></span><br><span class="line"><span class="string">    server.servlet.context-path = /apollo</span></span><br><span class="line"><span class="string"></span>  <span class="attr">apollo-env.properties:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    dev.meta=http://fill-in-dev-meta-server:8080</span></span><br><span class="line"><span class="string">    fat.meta=http://fill-in-fat-meta-server:8080</span></span><br><span class="line"><span class="string">    uat.meta=http://fill-in-uat-meta-server:8080</span></span><br><span class="line"><span class="string">    lpt.meta=http://fill-in-lpt-meta-server:8080</span></span><br><span class="line"><span class="string">    pro.meta=http://fill-in-pro-meta-server:8080</span></span><br><span class="line"><span class="string"></span><span class="meta">---</span></span><br><span class="line"><span class="comment"># service for apollo-portal</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">service-apollo-portal-server</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">service-apollo-portal-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8070</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8070</span></span><br><span class="line">      <span class="attr">nodePort:</span> <span class="string">&lt;apollo-portal-outside-port&gt;</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apollo-portal-server</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">ClientIP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># deployment for apollo-portal</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">&lt;namespace-name&gt;</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-apollo-portal-server</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">apollo-portal-server</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">apollo-portal-server</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">apollo-portal-server</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="comment"># 亲和性定义</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="comment"># 非亲和性策略</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">100</span></span><br><span class="line">            <span class="attr">podAffinityTerm:</span></span><br><span class="line">              <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                  <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                  <span class="attr">values:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">apollo-portal-server</span></span><br><span class="line">              <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">      <span class="comment"># 存储资源定义</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-apollo-portal-server</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">configmap-apollo-portal-server</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">application-github.properties</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">application-github.properties</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">apollo-env.properties</span></span><br><span class="line">                <span class="attr">path:</span> <span class="string">apollo-env.properties</span></span><br><span class="line">      <span class="comment"># 初始容器</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="comment"># 确保 apollo-admin 正常提供服务</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">dwdraju/alpine-curl-jq</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">check-service-apollo-admin-server-dev</span></span><br><span class="line">          <span class="attr">command:</span> [<span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, <span class="string">&quot;curl --connect-timeout 2 --max-time 5 --retry 60 --retry-delay 1 --retry-max-time 120 service-apollo-admin-server.&lt;namespace-name&gt;:8090&quot;</span>]</span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">apolloconfig/apollo-portal:1.8.1</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">          <span class="comment"># 镜像拉取策略</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">container-apollo-portal-server</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">8070</span></span><br><span class="line">          <span class="comment"># 存储资源挂载</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-apollo-portal-server</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/apollo-portal/config/application-github.properties</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">application-github.properties</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">volume-configmap-apollo-portal-server</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/apollo-portal/config/apollo-env.properties</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">apollo-env.properties</span></span><br><span class="line">          <span class="comment"># 环境变量</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_URL</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;&lt;mysql-url&gt;&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_USERNAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-apollo-portal-server-mysql</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">username</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SPRING_DATASOURCE_PASSWORD</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">secretKeyRef:</span></span><br><span class="line">                  <span class="attr">name:</span> <span class="string">secret-apollo-portal-server-mysql</span></span><br><span class="line">                  <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">APOLLO_PORTAL_ENVS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;dev&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DEV_META</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&#x27;http://service-apollo-config-server.&lt;namespace-name&gt;:8080&#x27;</span></span><br><span class="line">          <span class="comment"># 就绪探针</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8070</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="comment"># 存活探针</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">tcpSocket:</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">8070</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">300</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line">      <span class="comment"># 重启策略</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><h1 id="服务访问"><a href="#服务访问" class="headerlink" title="服务访问"></a>服务访问</h1><p>直接访问Portal服务对外的端口，账号密码默认为：apollo/admin<br>访问界面截图：<br><img src="60f148cf82812.png"></p><h1 id="SpringBoot中使用"><a href="#SpringBoot中使用" class="headerlink" title="SpringBoot中使用"></a>SpringBoot中使用</h1><h2 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1. 引入依赖"></a>1. 引入依赖</h2><p>注意版本强烈建议和部署的服务版本一致</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apollo-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;apollo-client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-修改SpringBoot配置文件（application-yml或application-properties）"><a href="#2-修改SpringBoot配置文件（application-yml或application-properties）" class="headerlink" title="2. 修改SpringBoot配置文件（application.yml或application.properties）"></a>2. 修改SpringBoot配置文件（application.yml或application.properties）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.id=xxx</span><br><span class="line">apollo.meta=xxx</span><br><span class="line">apollo.cluster=xxx</span><br><span class="line">apollo.bootstrap.enabled=true</span><br><span class="line">apollo.bootstrap.eagerLoad.enabled = true</span><br><span class="line">apollo.bootstrap.namespaces=xxx</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="如何修改apollo-portal服务中的部门列表"><a href="#如何修改apollo-portal服务中的部门列表" class="headerlink" title="如何修改apollo-portal服务中的部门列表"></a>如何修改apollo-portal服务中的部门列表</h2><p>Apollo-Portal服务中的部门列表数据是直接存储在数据库中的，页面上不能进行修改，所以需要在创建apolloportaldb的时候按需进行修改，数据表名称是<code>ServerConfig</code>，字段是<code>organizations</code>，内容为json格式数据，可根据官方数据修改即可。</p><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;官网&quot;&gt;&lt;a href=&quot;#官网&quot; class=&quot;headerlink&quot; title=&quot;官网&quot;&gt;&lt;/a&gt;官网&lt;/h1&gt;&lt;p&gt;github: &lt;a href=&quot;https://github.com/ctripcorp/apollo/&quot;&gt;https://github.</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Middleware" scheme="http://gaussli.com/categories/tech/middleware/"/>
    
    <category term="Apollo" scheme="http://gaussli.com/categories/tech/middleware/apollo/"/>
    
    
    <category term="Kubernetes" scheme="http://gaussli.com/tags/kubernetes/"/>
    
    <category term="脚本安装" scheme="http://gaussli.com/tags/%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/"/>
    
    <category term="Apollo" scheme="http://gaussli.com/tags/apollo/"/>
    
  </entry>
  
  <entry>
    <title>软件源镜像源国内加速整理</title>
    <link href="http://gaussli.com/2021/07/26/%E8%BD%AF%E4%BB%B6%E6%BA%90%E9%95%9C%E5%83%8F%E6%BA%90%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E6%95%B4%E7%90%86/"/>
    <id>http://gaussli.com/2021/07/26/%E8%BD%AF%E4%BB%B6%E6%BA%90%E9%95%9C%E5%83%8F%E6%BA%90%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E6%95%B4%E7%90%86/</id>
    <published>2021-07-26T08:21:35.000Z</published>
    <updated>2021-07-26T08:23:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="各大互联网厂商的YUM软件源官网"><a href="#各大互联网厂商的YUM软件源官网" class="headerlink" title="各大互联网厂商的YUM软件源官网"></a>各大互联网厂商的YUM软件源官网</h1><h2 id="阿里"><a href="#阿里" class="headerlink" title="阿里"></a>阿里</h2><p><a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com/</a></p><h2 id="腾讯"><a href="#腾讯" class="headerlink" title="腾讯"></a>腾讯</h2><p><a href="https://mirrors.cloud.tencent.com/">https://mirrors.cloud.tencent.com/</a></p><h2 id="华为"><a href="#华为" class="headerlink" title="华为"></a>华为</h2><p><a href="https://mirrors.huaweicloud.com/">https://mirrors.huaweicloud.com/</a></p><h2 id="网易"><a href="#网易" class="headerlink" title="网易"></a>网易</h2><p><a href="https://mirrors.163.com/">https://mirrors.163.com/</a></p><h2 id="清华大学"><a href="#清华大学" class="headerlink" title="清华大学"></a>清华大学</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></p><h1 id="Docker镜像源"><a href="#Docker镜像源" class="headerlink" title="Docker镜像源"></a>Docker镜像源</h1><h2 id="网易-1"><a href="#网易-1" class="headerlink" title="网易"></a>网易</h2><p><a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com</a></p><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;各大互联网厂商的YUM软件源官网&quot;&gt;&lt;a href=&quot;#各大互联网厂商的YUM软件源官网&quot; class=&quot;headerlink&quot; title=&quot;各大互联网厂商的YUM软件源官网&quot;&gt;&lt;/a&gt;各大互联网厂商的YUM软件源官网&lt;/h1&gt;&lt;h2 id=&quot;阿里&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="Linux" scheme="http://gaussli.com/categories/tech/linux/"/>
    
    
    <category term="Linux" scheme="http://gaussli.com/tags/linux/"/>
    
    <category term="YUM" scheme="http://gaussli.com/tags/yum/"/>
    
    <category term="Docker" scheme="http://gaussli.com/tags/docker/"/>
    
    <category term="代理源" scheme="http://gaussli.com/tags/%E4%BB%A3%E7%90%86%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>[J2EE]SpringMVC中WebApplicationContext的相关配置笔记</title>
    <link href="http://gaussli.com/2019/08/12/j2ee-springmvc%E4%B8%ADwebapplicationcontext%E7%9A%84%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/"/>
    <id>http://gaussli.com/2019/08/12/j2ee-springmvc%E4%B8%ADwebapplicationcontext%E7%9A%84%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</id>
    <published>2019-08-12T09:48:50.000Z</published>
    <updated>2021-07-26T15:14:47.507Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WebApplicationContext中特殊的Bean"><a href="#WebApplicationContext中特殊的Bean" class="headerlink" title="WebApplicationContext中特殊的Bean"></a>WebApplicationContext中特殊的Bean</h3><ul><li>handler mapping：处理映射器。预处理器、后处理器和控制器的列表，他们在符合某种条件下才被执行（例如符合控制器指定的URL）</li><li>controller(s)：控制器。作为MVC三层的一部分，提供具体功能（或者至少能够访问具体功能）的Bean</li><li>view resolver：视图解析器。能够解析视图名，在DispatcherServlet解析视图时使用</li><li>locale resolver：本地化信息解析器。能够解析用户正在使用的本地化信息，以提供国际化视图</li><li>theme resolver：主题解析器。能够解析Web应用所使用的主题，比如提供个性化的布局</li><li>multipart file resolver：分段文件解析器。提供HTML表单文件上传功能</li><li>handlerexception resolver：处理器异常解析器。将异常对应到视图，或者实现某种复杂的异常处理代码</li></ul><hr><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;WebApplicationContext中特殊的Bean&quot;&gt;&lt;a href=&quot;#WebApplicationContext中特殊的Bean&quot; class=&quot;headerlink&quot; title=&quot;WebApplicationContext中特殊的Bean&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="JavaWeb" scheme="http://gaussli.com/categories/tech/javaweb/"/>
    
    <category term="J2EE" scheme="http://gaussli.com/categories/tech/javaweb/j2ee/"/>
    
    
    <category term="SpringMVC" scheme="http://gaussli.com/tags/springmvc/"/>
    
    <category term="xml" scheme="http://gaussli.com/tags/xml/"/>
    
  </entry>
  
  <entry>
    <title>[J2EE]Spring中Bean的生命周期</title>
    <link href="http://gaussli.com/2019/08/12/j2ee-spring%E4%B8%ADbean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://gaussli.com/2019/08/12/j2ee-spring%E4%B8%ADbean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</id>
    <published>2019-08-12T09:30:51.000Z</published>
    <updated>2021-07-26T15:14:50.410Z</updated>
    
    <content type="html"><![CDATA[<p>在Spring容器初始化的时候，Spring帮我们的Bean做了很多的工作，下图看看Bean从初始化到销毁的生命周期：<br><img src="1.jpg" alt="Bean生命周期"></p><p>具体的流程步骤说明：</p><ol><li>Spring实例化Bean</li><li>利用依赖注入来配置Bean中的所有属性值</li><li>如果Bean实现了BeanNameAware接口，则Spring调用Bean的setBeanName()方法传入当前Bean的ID值</li><li>如果Bean实现了BeanFactoryAware接口，则Spring调用setBeanFactory()方法传入当前工厂实例的引用</li><li>如果Bean实现了ApplicationContextAware接口，则Spring调用setApplicationContext()方法传入当前ApplicationContext实例的引用</li><li>如果Bean实现了BeanPostProcessor接口，则Spring会调用postProcessBeforeInitialization()方法</li><li>如果Bean实现了InitializingBean接口，则Spring会调用afterPropertiesSet()方法</li><li>如果在配置文件中用过init-method属性制定了初始化方法，则调用该初始化方法</li><li>如果Bean实现了BeanPostProcessor接口，则Spring会调用postProcessAfterInitialization()方法</li><li>到此为止，Bean就可以被使用了，他将一直存在于Spring容器中直到被销毁</li><li>如果Bean实现了DisposableBean接口，则Spring会调用destory()方法</li><li>如果在配置文件中用过destory-method属性指定了销毁Bean的方法，则调用该方法</li></ol><p>(•̀ᴗ•́)و ̑̑</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在Spring容器初始化的时候，Spring帮我们的Bean做了很多的工作，下图看看Bean从初始化到销毁的生命周期：&lt;br&gt;&lt;img src=&quot;1.jpg&quot; alt=&quot;Bean生命周期&quot;&gt;&lt;/p&gt;
&lt;p&gt;具体的流程步骤说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Spring实例化B</summary>
      
    
    
    
    <category term="Tech" scheme="http://gaussli.com/categories/tech/"/>
    
    <category term="JavaWeb" scheme="http://gaussli.com/categories/tech/javaweb/"/>
    
    <category term="J2EE" scheme="http://gaussli.com/categories/tech/javaweb/j2ee/"/>
    
    
    <category term="Spring" scheme="http://gaussli.com/tags/spring/"/>
    
    <category term="Bean" scheme="http://gaussli.com/tags/bean/"/>
    
    <category term="生命周期" scheme="http://gaussli.com/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
    <category term="life cycle" scheme="http://gaussli.com/tags/life-cycle/"/>
    
  </entry>
  
</feed>
